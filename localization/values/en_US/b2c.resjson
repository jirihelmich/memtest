{
    "AboutNavigator": "About Navigator",
    "_AboutNavigator.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AccountDeleteSuccessMessage": "Account successfully deleted.",
    "_AccountDeleteSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ActionNoUndone": "Action cannot be undone.",
    "_ActionNoUndone.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Add": "Add",
    "_Add.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "AddAnotherItem": "Add another item",
    "_AddAnotherItem.meta": {
      "Scopes": [ "Distributor" ]
    },
    "AddCardForFuturePaymentMessage": "Please add a card in case of future payments. You won't be charged for anything now.",
    "_AddCardForFuturePaymentMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddComment": "Add comment",
    "_AddComment.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddCompanion": "Add companion",
    "_AddCompanion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddCompanionHint": "Please provide email addresses of your companions:",
    "_AddCompanionHint.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Added": "Added",
    "_Added.meta": {
      "Scopes": [ "Distributor" ]
    },
    "AdditionalInfoNeeded": "Please provide more information. We are missing some of your details.",
    "_AdditionalInfoNeeded.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AdditionalTaxIdentifier": "Additional tax identifier",
    "_AdditionalTaxIdentifier.meta": {
      "Scopes": [ "Billing" ]
    },
    "AddMoreItems": "Add more items",
    "_AddMoreItems.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddMoreOrders": "Add more orders",
    "_AddMoreOrders.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddNewAddress": "Add new address",
    "_AddNewAddress.meta": {
      "Scopes": [ "Operator" ]
    },
    "AddPaymentCard": "Add payment card",
    "_AddPaymentCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddPaymentCardDescription": "Add your payment details below.",
    "_AddPaymentCardDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddPaymentCardProgress": "Adding payment card",
    "_AddPaymentCardProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddPaymentCardPrompt": "Please enter your details below to add a payment card to your account.",
    "_AddPaymentCardPrompt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddPaymentMethod": "Add payment method",
    "_AddPaymentMethod.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Address": "Address",
    "_Address.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator", "Billing" ]
    },
    "AddressDeleteSuccessMessage": "Address successfully deleted.",
    "_AddressDeleteSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddressLine1": "Address line 1",
    "_AddressLine1.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "AddressLine2": "Address line 2",
    "_AddressLine2.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "AddressNew": "New address",
    "_AddressNew.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddressPlural": "Addresses",
    "_AddressPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddressStorageDescription": "Safely store your address details now for a faster check-in later.",
    "_AddressStorageDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddRoom": "Book now",
    "_AddRoom.meta": {
      "Scopes": [ "Distributor" ]
    },
    "AddToAppleWallet": "Add to apple wallet",
    "_AddToAppleWallet.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddToBasket": "Add to basket",
    "_AddToBasket.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AddYourInfo": "Add your info",
    "_AddYourInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Adult": "Adult",
    "_Adult.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AdultPlural": "Adults",
    "_AdultPlural.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Africa": "Africa",
    "_Africa.meta": {
      "Scopes": [ "Operator" ]
    },
    "AgreePrivacyPolicy": "I agree with privacy policy",
    "_AgreePrivacyPolicy.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AgreeTermsConditions": "I have read and accept all Terms and Conditions",
    "_AgreeTermsConditions.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AgreeTo": "I agree to",
    "_AgreeTo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AgreeWith": "I agree with",
    "_AgreeWith.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "All": "All",
    "_All.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AllowSharePersonalInfo": "Share this personal information with property",
    "_AllowSharePersonalInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AlmostDone": "Almost done!",
    "_AlmostDone.meta": {
      "Scopes": [ "Navigator" ]
    },
    "AmountGross": "Amount",
    "_AmountGross.meta": {
      "Scopes": [ "Navigator", "Billing" ]
    },
    "AmountNet": "Net",
    "_AmountNet.meta": {
      "Scopes": [ "Billing" ]
    },
    "AmountTax": "{taxationName}",
    "_AmountTax.meta": {
      "Scopes": [ "Billing" ]
    },
    "And": "and",
    "_And.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "AnotherRoom": "Add another room",
    "_AnotherRoom.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Apartment": "Apartment",
    "_Apartment.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "ApartmentPlural": "Apartments",
    "_ApartmentPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ApiUrl": "API URL",
    "_ApiUrl.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ApplePassDescription": "Your stay at {enterpriseName}",
    "_ApplePassDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ApproximatePriceIn": "Approximate price in {currency}",
    "_ApproximatePriceIn.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "Arrival": "Arrival",
    "_Arrival.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Arrivals": "Arrivals",
    "_Arrivals.meta": {
      "Scopes": [ "Operator" ]
    },
    "ArrivalsFetchingProblemPrompt": "We ran into a problem fetching your arrivals, but it should be solved in no time.",
    "_ArrivalsFetchingProblemPrompt.meta": {
      "Scopes": [ "Operator" ]
    },
    "ArrivalsLoadingErrorMessage": "Arrivals didn't load",
    "_ArrivalsLoadingErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "ArrivalTomorrowPromptTemplate": "You're arriving at {name} tomorrow! What can we do to make your stay more special?",
    "_ArrivalTomorrowPromptTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Asia": "Asia",
    "_Asia.meta": {
      "Scopes": [ "Operator" ]
    },
    "AustraliaAndOceania": "Australia and Oceania",
    "_AustraliaAndOceania.meta": {
      "Scopes": [ "Operator" ]
    },
    "AuthenticationFailedErrorMessage": "Authentication was not successful. Please try again.",
    "_AuthenticationFailedErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Availability": "Availability",
    "_Availability.meta": {
      "Scopes": [ "Distributor" ]
    },
    "AvailableBedPlural": "Available beds",
    "_AvailableBedPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "AvailableRoomPlural": "Available rooms",
    "_AvailableRoomPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "AvailableSpaceCount": "Available",
    "_AvailableSpaceCount.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Back": "Back",
    "_Back.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "BadConfigurationErrorMessage": "Distributor is badly configured. Please check developer console for more information.",
    "_BadConfigurationErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Balance": "Balance",
    "_Balance.meta": {
      "Scopes": [ "Billing" ]
    },
    "Basket": "Basket",
    "_Basket.meta": {
      "Scopes": [ "Navigator" ]
    },
    "BasketNotEmpty": "Basket is not empty.",
    "_BasketNotEmpty.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Bed": "Bed",
    "_Bed.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "BedPlural": "Beds",
    "_BedPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Bill": "Bill",
    "_Bill.meta": {
      "Scopes": [ "Billing" ]
    },
    "BillAssigneeIdentifier": "Identifier",
    "_BillAssigneeIdentifier.meta": {
      "Scopes": [ "Billing" ]
    },
    "BillBalanced": "Balanced",
    "_BillBalanced.meta": {
      "Scopes": [ "Operator" ]
    },
    "BillCopyRequestHint": "If you need a copy of your bill, please contact {enterpriseName}.",
    "_BillCopyRequestHint.meta": {
      "Scopes": [ "Navigator" ]
    },
    "BillingDetailPlural": "Billing details",
    "_BillingDetailPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "BillItem": "Bill item",
    "_BillItem.meta": {
      "Scopes": [ "Billing" ]
    },
    "BillItemPlural": "Bill items",
    "_BillItemPlural.meta": {
      "Scopes": [ "Billing" ]
    },
    "BillPreview": "Bill preview",
    "_BillPreview.meta": {
      "Scopes": [ "Billing" ]
    },
    "BillSentToEmailMessage": "You'll find a copy of the bill in your email.",
    "_BillSentToEmailMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "BillsNotSettledErrorMessage": "Please visit reception to settle your bill before check-in.",
    "_BillsNotSettledErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "BillStatus": "Bill status",
    "_BillStatus.meta": {
      "Scopes": [ "Operator" ]
    },
    "BillUnbalanced": "Unbalanced",
    "_BillUnbalanced.meta": {
      "Scopes": [ "Operator" ]
    },
    "BirthDate": "Birth date",
    "_BirthDate.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "BirthPlace": "Birth place",
    "_BirthPlace.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "BookAnotherStay": "Book another stay",
    "_BookAnotherStay.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookerDisabled": "I'm booking for myself",
    "_BookerDisabled.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookerEnabled": "I'm booking for someone else",
    "_BookerEnabled.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingBestRateGuarantee": "Best booking rate on the internet guaranteed",
    "_BookingBestRateGuarantee.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingBestRateGuaranteeDescription": "Your search is complete. The {HotelName} can guarantee the best rates on the internet – they’re unbeatable. Simply book your stay here and if you find a lower published rate at the same property for the same dates at any other qualified online source, we will match it.",
    "_BookingBestRateGuaranteeDescription.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingCloseWidget": "Close",
    "_BookingCloseWidget.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingConfirmationMessage": "Thank you for your reservation at {enterpriseName}! You will receive a confirmation email containing additional details.",
    "_BookingConfirmationMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingForAnotherPersonMessage": "Booking for another person",
    "_BookingForAnotherPersonMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "BookingForMeMessage": "Booking for me",
    "_BookingForMeMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "BookingFormMessage": "Your rooms are available! Please complete your contact information. We will send you a booking confirmation email for your stay with us at {HotelName}.",
    "_BookingFormMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingHintArrival": "Please select your arrival date",
    "_BookingHintArrival.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingHintDeparture": "Please select your departure date",
    "_BookingHintDeparture.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingNoRoomAvailable": "We're very sorry, there are no rooms available for the dates you've selected.",
    "_BookingNoRoomAvailable.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingNotes": "Special requests",
    "_BookingNotes.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingOpenWidget": "View rates and availability",
    "_BookingOpenWidget.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingRestart": "Book again",
    "_BookingRestart.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingTweet": "I just booked a trip to {City}! Looking forward to my stay at {HotelName}. Check it out:",
    "_BookingTweet.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingUserCreated": "User account created.",
    "_BookingUserCreated.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookingVoucherCode": "Voucher code",
    "_BookingVoucherCode.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookOnlineBonuses": "Best price + online bonuses",
    "_BookOnlineBonuses.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BookOnlineGetMore": "Book online, get more",
    "_BookOnlineGetMore.meta": {
      "Scopes": [ "Distributor" ]
    },
    "BrowserRequiredForCommander": "In order to use Commander on this device, a web browser is required.",
    "_BrowserRequiredForCommander.meta": {
      "Scopes": [ "Operator" ]
    },
    "CallOutTravelExperiences": "Streamlining your travel experience by connecting people to great properties and the cities they’re in.",
    "_CallOutTravelExperiences.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Cancel": "Cancel",
    "_Cancel.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Canceled": "Canceled",
    "_Canceled.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Cancelled": "Canceled",
    "_Cancelled.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CancelOptionalReservationSuccessMessage": "Optional reservation successfully canceled.",
    "_CancelOptionalReservationSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CancelReservation": "Cancel reservation",
    "_CancelReservation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CannotPlaceOrderWithoutCC": "Cannot place an order without stored payment details.",
    "_CannotPlaceOrderWithoutCC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CannotUsePicture": "Cannot use this picture.",
    "_CannotUsePicture.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CanWeMakeYourStayBetterPrompt": "Is there anything you'd like to add?",
    "_CanWeMakeYourStayBetterPrompt.meta": {
      "Scopes": [ "Operator" ]
    },
    "Categories": "Categories",
    "_Categories.meta": {
      "Scopes": [ "Distributor" ]
    },
    "CategoriesWithoutAvailability": "Categories without availability",
    "_CategoriesWithoutAvailability.meta": {
      "Scopes": [ "Distributor" ]
    },
    "CertificateExpirationWarningBody": "<p>                Dear {enterpriseName},            </p>            <p>                We are writing to inform you that the certificate used for {description} will expire on <strong>{expirationDate}</strong>.            </p>            <p>                Please note that you must renew this certificate before its expiration date in order for <strong>{description}</strong> to continue working properly.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_CertificateExpirationWarningBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChangeArrivalDate": "Change arrival date",
    "_ChangeArrivalDate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ChangeArrivalTime": "Change arrival time",
    "_ChangeArrivalTime.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ChangePassword": "Change password",
    "_ChangePassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ChangingPhotoProgress": "Changing photo",
    "_ChangingPhotoProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ChannelManagerNotificationTypeExplanationCancellingNonexistingGroup": "The reservation was most likely created manually before the channel manager connection with MEWS was activated or the reservation was cancelled by the guest before MEWS downloaded it from the extranet.<br /><br /> The reservation group {channelManagerGroupCode} can't be properly downloaded. Please create it manually in Mews or contact the {integration}'s support to fix the problem (if possible) and resend the group to Mews.",
    "_ChannelManagerNotificationTypeExplanationCancellingNonexistingGroup.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationCreatingGroupWithMissingNight": "The reservation came from {channelManagerClient} with some nights missing in the middle of some reservations. Those reservation had to be split to multiple shorter reservations. Please check the whole booking {channelManagerGroupCode} carefully against extranet, especially in case of modifications.",
    "_ChannelManagerNotificationTypeExplanationCreatingGroupWithMissingNight.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationCreatingGroupWithUnknownCurrency": "There is probably an incorrect setting in the supported currencies one of the OTA's, please check all channels.",
    "_ChannelManagerNotificationTypeExplanationCreatingGroupWithUnknownCurrency.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationCreatingReservationWithoutNights": "The reservation came from {channelManagerClient} without nights. Such reservation can't be accepted. This is most likely because of the OTA set up, which allows day-use reservations. Contact them to turn such option off, is possible.",
    "_ChannelManagerNotificationTypeExplanationCreatingReservationWithoutNights.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationModifyingCanceledReservation": "The reservation was already canceled in MEWS. Please double check this booking manually to ensure that the information in MEWS is matching your Channel Manager extranet.",
    "_ChannelManagerNotificationTypeExplanationModifyingCanceledReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationModifyingCheckedInReservation": "Processing this reservation change would require to change checked-in reservation, which is not possible.",
    "_ChannelManagerNotificationTypeExplanationModifyingCheckedInReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationModifyingCheckedOutReservation": "Processing this reservation would require making a change to a booking which is already checked-out, and is thus not possible.",
    "_ChannelManagerNotificationTypeExplanationModifyingCheckedOutReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationModifyingReservationWithoutExistingGroupNotProcessed": "We received a modification for booking {channelManagerGroupCode} via the Channel Manager, yet the original reservation was not found in Mews. Please make sure you apply the modification manually.",
    "_ChannelManagerNotificationTypeExplanationModifyingReservationWithoutExistingGroupNotProcessed.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationModifyingReservationWithoutExistingGroupProcessed": "We received a modification for booking {channelManagerGroupCode} via the Channel Manager, yet the original reservation was not found in Mews. Therefore we have created a new booking.<br /><br />It is possible that the original reservation was manually created. If so, please handle this duplicity - ideally by cancelling the original (manually created) reservation and keeping this new reservation, as further modifications of this reservation may follow.",
    "_ChannelManagerNotificationTypeExplanationModifyingReservationWithoutExistingGroupProcessed.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationModifyingReservationWithPaidItems": "Processing this reservation would require to change already paid reservation items which is not possible.",
    "_ChannelManagerNotificationTypeExplanationModifyingReservationWithPaidItems.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationModifyingUnconfirmedReservation": "Processing this reservation would require to change unconfirmed reservation which is not possible.",
    "_ChannelManagerNotificationTypeExplanationModifyingUnconfirmedReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationProcessingGroupWithDuplicateNights": "Processing reservations of this group was not possible, as some of the nights are duplicate.",
    "_ChannelManagerNotificationTypeExplanationProcessingGroupWithDuplicateNights.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationProcessingGroupWithFlatTaxes": "We received reservation with night or product with gross price where is applied flat tax. Please verify if reservations is properly priced.",
    "_ChannelManagerNotificationTypeExplanationProcessingGroupWithFlatTaxes.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationProcessingGroupWithItemInThePast": "Processing this group was not possible, as some of the nights are in the past, and Mews can only accept bookings with a future arrival date.",
    "_ChannelManagerNotificationTypeExplanationProcessingGroupWithItemInThePast.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeExplanationProcessingGroupWithNegativeNightCost": "There are probably some product orders added based on rules that cause night cost to be negative. Please consider whether the group {channelManagerGroupCode} is correct or should be canceled and communicated to the guest.",
    "_ChannelManagerNotificationTypeExplanationProcessingGroupWithNegativeNightCost.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectCancellingNonexistingGroup": "Attempting to cancel a non-existing reservation",
    "_ChannelManagerNotificationTypeSubjectCancellingNonexistingGroup.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectCreatingGroupWithMissingNight": "Some night in the middle of the reservation is missing, check the reservation carefully",
    "_ChannelManagerNotificationTypeSubjectCreatingGroupWithMissingNight.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectCreatingGroupWithUnknownCurrency": "Reservation group is priced in unknown currency: '{currencyCode}'",
    "_ChannelManagerNotificationTypeSubjectCreatingGroupWithUnknownCurrency.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectCreatingReservationWithoutNights": "Some reservation has no night",
    "_ChannelManagerNotificationTypeSubjectCreatingReservationWithoutNights.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectModifyingCanceledReservation": "Attempting to modify/cancel an already canceled reservation",
    "_ChannelManagerNotificationTypeSubjectModifyingCanceledReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectModifyingCheckedInReservation": "Attempting to modify/cancel an already checked-in reservation",
    "_ChannelManagerNotificationTypeSubjectModifyingCheckedInReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectModifyingCheckedOutReservation": "Attempting to modify/cancel an already checked-out reservation",
    "_ChannelManagerNotificationTypeSubjectModifyingCheckedOutReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectModifyingNonexistingReservation": "Attempting to modify a non-existing reservation",
    "_ChannelManagerNotificationTypeSubjectModifyingNonexistingReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectModifyingReservationWithPaidItems": "Attempting to modify a reservation that has paid items already",
    "_ChannelManagerNotificationTypeSubjectModifyingReservationWithPaidItems.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectModifyingUnconfirmedReservation": "Attempting to modify/cancel an unconfirmed reservation",
    "_ChannelManagerNotificationTypeSubjectModifyingUnconfirmedReservation.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectProcessingGroupWithDuplicateNights": "Some reservation has duplicate nights",
    "_ChannelManagerNotificationTypeSubjectProcessingGroupWithDuplicateNights.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectProcessingGroupWithFlatTaxes": "Some reservation has items in gross prices with flat taxes.",
    "_ChannelManagerNotificationTypeSubjectProcessingGroupWithFlatTaxes.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectProcessingGroupWithItemInThePast": "Some reservation contains nights or orders in the past",
    "_ChannelManagerNotificationTypeSubjectProcessingGroupWithItemInThePast.meta": {
      "Scopes": [ "Mail" ]
    },
    "ChannelManagerNotificationTypeSubjectProcessingGroupWithNegativeNightCost": "Some reservation has a negative night cost",
    "_ChannelManagerNotificationTypeSubjectProcessingGroupWithNegativeNightCost.meta": {
      "Scopes": [ "Mail" ]
    },
    "CheckedIn": "Checked in",
    "_CheckedIn.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "CheckedOut": "Checked out",
    "_CheckedOut.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckEmailNewPassword": "Please check your registered email account for your new password.",
    "_CheckEmailNewPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckIn": "Check in",
    "_CheckIn.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "CheckInAlreadyDoneErrorMessage": "You're already checked-in. Please contact reception with any questions.",
    "_CheckInAlreadyDoneErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInAnotherReservation": "Check in another reservation",
    "_CheckInAnotherReservation.meta": {
      "Scopes": [ "Operator" ]
    },
    "CheckInComplete": "Yay for saved time!",
    "_CheckInComplete.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInDate": "Check-in date",
    "_CheckInDate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInFailedMessage": "Unfortunately we were not able to finish the check-in at the moment, please go to reception.",
    "_CheckInFailedMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "CheckInNeeded": "Check-in needed",
    "_CheckInNeeded.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInNotAvailable": "Cannot check in using these reservation details.",
    "_CheckInNotAvailable.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInNotReadyErrorMessage": "Your reservation can't be checked in yet.",
    "_CheckInNotReadyErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "CheckInNoun": "Check-in",
    "_CheckInNoun.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CheckInOnline": "Check in online",
    "_CheckInOnline.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInOverview": "Check-in overview",
    "_CheckInOverview.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInSuccessMessage": "Your check-in is complete!",
    "_CheckInSuccessMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "CheckInThankYou": "Thank you for checking in to",
    "_CheckInThankYou.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInto": "Check in to",
    "_CheckInto.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckIntoSectionTitle": "Check in to",
    "_CheckIntoSectionTitle.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckIntoTemplate": "Check in to {name}",
    "_CheckIntoTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckInType": "Check-in type",
    "_CheckInType.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Checkout": "Check out",
    "_Checkout.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CheckOutAdjustmentInstructions": "To change your check-out time, just stop by reception.",
    "_CheckOutAdjustmentInstructions.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutBeforeLeaveMessage": "Wait until you're ready to leave the room, then check out.",
    "_CheckOutBeforeLeaveMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutDoneComeBackMessage": "Come see us again the next time you're in {city}!",
    "_CheckOutDoneComeBackMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutDoneMessage": "We'll check you out at {time} {todayTomorrow}.",
    "_CheckOutDoneMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutDoneWishMessage": "We hope you've enjoyed your stay.",
    "_CheckOutDoneWishMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutExtraOrderQuestion": "Any minibar items you should add to your bill?",
    "_CheckOutExtraOrderQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutFrom": "Checking out of",
    "_CheckOutFrom.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutGatherYourBelongings": "Gather your things",
    "_CheckOutGatherYourBelongings.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutGetReadyToLeave": "Prepare to go",
    "_CheckOutGetReadyToLeave.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckoutNoun": "Check-out",
    "_CheckoutNoun.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutNow": "Check out now",
    "_CheckOutNow.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckoutOn": "Check-out on",
    "_CheckoutOn.meta": {
      "Scopes": [ "Operator" ]
    },
    "CheckOutOnline": "Check out online",
    "_CheckOutOnline.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CheckOutReadyToGoQuestion": "Ready?",
    "_CheckOutReadyToGoQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Child": "Child",
    "_Child.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ChildPlural": "Children",
    "_ChildPlural.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "ChooseExistingCompanion": "Choose an existing companion",
    "_ChooseExistingCompanion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ChooseOrSelectPaymentCardDescription": "Almost done! Choose a saved card or add a new one.",
    "_ChooseOrSelectPaymentCardDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ChooseTimeInFuture": "Please choose a time in the future",
    "_ChooseTimeInFuture.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Cid": "CID",
    "_Cid.meta": {
      "Scopes": [ "Billing" ]
    },
    "City": "City",
    "_City.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "CitySelectionRequired": "Please select a city.",
    "_CitySelectionRequired.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CityTimeTemplate": "{city} time",
    "_CityTimeTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Clear": "Clear",
    "_Clear.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "ClearBasket": "Clear basket",
    "_ClearBasket.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ClearingProgress": "Clearing",
    "_ClearingProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CloseBy": "Close by",
    "_CloseBy.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ClosestAvailability": "Closest availability",
    "_ClosestAvailability.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ClosestAvailabilityMessage": "Closest availability options below.",
    "_ClosestAvailabilityMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Code": "Code",
    "_Code.meta": {
      "Scopes": [ "Billing" ]
    },
    "CollectKeys": "Please collect your key at reception when you arrive.",
    "_CollectKeys.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CollectPaymentInstructions": "To collect the payment, you can:",
    "_CollectPaymentInstructions.meta": {
      "Scopes": [ "Mail" ]
    },
    "CollectYourKeys": "Collect your keys",
    "_CollectYourKeys.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CommentsOfOrder": "Order comments",
    "_CommentsOfOrder.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CompanionInvitationMail": "<p>Dear {titlePrefix} {name},</p><p>We are excited to welcome you to {enterpriseName} on <strong>{arrivalDate}</strong>!</p><p>Please check in online as a part of your group using the link to Mews Navigator below. Here, you can complete all legally required details so that you can speed up your check-in and relax once you arrive.</p>{signInLink}<h3 style='text-align: center'>Need anything?</h3> {chatLink}<p>Wishing you safe and pleasant travels. See you shortly!</p><p>Kind regards,<br/>{enterpriseName}</p> {addToAppleWalletLink}",
    "_CompanionInvitationMail.meta": {
      "Scopes": [ "Mail" ]
    },
    "CompanionInvitationMailSubject": "Invitation to online check-in from {enterpriseName}",
    "_CompanionInvitationMailSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "CompanionPosition": "Companion {position}",
    "_CompanionPosition.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CompanionsEmail": "Companion's email",
    "_CompanionsEmail.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Company": "Company",
    "_Company.meta": {
      "Scopes": [ "Navigator", "Billing" ]
    },
    "CompanyPaymentCardMissingPrompt": "Please add payment card for this company.",
    "_CompanyPaymentCardMissingPrompt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ComparePrices": "Compare prices",
    "_ComparePrices.meta": {
      "Scopes": [ "Distributor" ]
    },
    "CompleteOrder": "Complete my order",
    "_CompleteOrder.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CompleteProfile": "Complete profile",
    "_CompleteProfile.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CompleteYourProfile": "Complete your profile",
    "_CompleteYourProfile.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CompleteYourRegistrationText": "Complete registration by setting a personal password for Mews Navigator login.",
    "_CompleteYourRegistrationText.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Complimentary": "Complimentary",
    "_Complimentary.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Confirm": "Confirm",
    "_Confirm.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Confirmation": "Confirmation",
    "_Confirmation.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ConfirmationEmailSent": "Email successfully sent. Please verify email address and then sign in.",
    "_ConfirmationEmailSent.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmationNumber": "Confirmation number",
    "_ConfirmationNumber.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "ConfirmDeleteOrder": "Delete this order?",
    "_ConfirmDeleteOrder.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmDeleteProduct": "Delete this product?",
    "_ConfirmDeleteProduct.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmDeleteSingleProduct": "Order contains only 1 product. Deleting this product will also delete the order. Delete product and order?",
    "_ConfirmDeleteSingleProduct.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmLeave": "Are you sure you want to leave?",
    "_ConfirmLeave.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmNewPassword": "Confirm new password",
    "_ConfirmNewPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmOptionalReservationSuccessMessage": "Optional reservation successfully confirmed.",
    "_ConfirmOptionalReservationSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmOrCancelReservation": "Confirm or cancel reservation",
    "_ConfirmOrCancelReservation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmReservation": "Confirm reservation",
    "_ConfirmReservation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmSaveOrder": "Save changes to your order?",
    "_ConfirmSaveOrder.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConfirmSignOut": "Continue signing out?",
    "_ConfirmSignOut.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ConnectionErrorMessage": "An error occurred. Please check your internet connection and try again.",
    "_ConnectionErrorMessage.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "ContactAndPaymentDetails": "Contact & payment details",
    "_ContactAndPaymentDetails.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ContactInfo": "Contact info",
    "_ContactInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ContactReceptionMessage": "If there's a problem with your bill, contact reception.",
    "_ContactReceptionMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ContactUsMessage": "You can also contact us at {email} or {telephone}.",
    "_ContactUsMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ContactUsWithQuestions": "Don't hesitate to contact us if you have any questions:",
    "_ContactUsWithQuestions.meta": {
      "Scopes": [ "Mail" ]
    },
    "Continue": "Continue",
    "_Continue.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Count": "Count",
    "_Count.meta": {
      "Scopes": [ "Billing" ]
    },
    "Country": "Country",
    "_Country.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "CountryAD": "Andorra",
    "_CountryAD.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAE": "United Arab Emirates",
    "_CountryAE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAF": "Afghanistan",
    "_CountryAF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAG": "Antigua and Barbuda",
    "_CountryAG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAI": "Anguilla",
    "_CountryAI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAL": "Albania",
    "_CountryAL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAM": "Armenia",
    "_CountryAM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAO": "Angola",
    "_CountryAO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAQ": "Antarctica",
    "_CountryAQ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAR": "Argentina",
    "_CountryAR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAS": "American Samoa",
    "_CountryAS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAT": "Austria",
    "_CountryAT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAU": "Australia",
    "_CountryAU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAW": "Aruba",
    "_CountryAW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAX": "Åland Islands",
    "_CountryAX.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryAZ": "Azerbaijan",
    "_CountryAZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBA": "Bosnia and Herzegovina",
    "_CountryBA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBB": "Barbados",
    "_CountryBB.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBD": "Bangladesh",
    "_CountryBD.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBE": "Belgium",
    "_CountryBE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBF": "Burkina Faso",
    "_CountryBF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBG": "Bulgaria",
    "_CountryBG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBH": "Bahrain",
    "_CountryBH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBI": "Burundi",
    "_CountryBI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBJ": "Benin",
    "_CountryBJ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBL": "Saint Barthélemy",
    "_CountryBL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBM": "Bermuda",
    "_CountryBM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBN": "Brunei Darussalam",
    "_CountryBN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBO": "Bolivia (Plurinational State of)",
    "_CountryBO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBQ": "Bonaire, Sint Eustatius and Saba",
    "_CountryBQ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBR": "Brazil",
    "_CountryBR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBS": "Bahamas",
    "_CountryBS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBT": "Bhutan",
    "_CountryBT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBV": "Bouvet Island",
    "_CountryBV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBW": "Botswana",
    "_CountryBW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBY": "Belarus",
    "_CountryBY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryBZ": "Belize",
    "_CountryBZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCA": "Canada",
    "_CountryCA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCC": "Cocos (Keeling) Islands",
    "_CountryCC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCD": "Congo (Democratic Republic of the)",
    "_CountryCD.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCF": "Central African Republic",
    "_CountryCF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCG": "Congo",
    "_CountryCG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCH": "Switzerland",
    "_CountryCH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCI": "Côte d'Ivoire",
    "_CountryCI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCK": "Cook Islands",
    "_CountryCK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCL": "Chile",
    "_CountryCL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCM": "Cameroon",
    "_CountryCM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCN": "China",
    "_CountryCN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCO": "Colombia",
    "_CountryCO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCode": "Country code",
    "_CountryCode.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountryCR": "Costa Rica",
    "_CountryCR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCU": "Cuba",
    "_CountryCU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCV": "Cabo Verde",
    "_CountryCV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCW": "Curaçao",
    "_CountryCW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCX": "Christmas Island",
    "_CountryCX.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCY": "Cyprus",
    "_CountryCY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryCZ": "Czech Republic",
    "_CountryCZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryDE": "Germany",
    "_CountryDE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryDJ": "Djibouti",
    "_CountryDJ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryDK": "Denmark",
    "_CountryDK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryDM": "Dominica",
    "_CountryDM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryDO": "Dominican Republic",
    "_CountryDO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryDZ": "Algeria",
    "_CountryDZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryEC": "Ecuador",
    "_CountryEC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryEE": "Estonia",
    "_CountryEE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryEG": "Egypt",
    "_CountryEG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryEH": "Western Sahara",
    "_CountryEH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryER": "Eritrea",
    "_CountryER.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryES": "Spain",
    "_CountryES.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryET": "Ethiopia",
    "_CountryET.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryFI": "Finland",
    "_CountryFI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryFJ": "Fiji",
    "_CountryFJ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryFK": "Falkland Islands (Malvinas)",
    "_CountryFK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryFM": "Micronesia (Federated States of)",
    "_CountryFM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryFO": "Faroe Islands",
    "_CountryFO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryFR": "France",
    "_CountryFR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGA": "Gabon",
    "_CountryGA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGB": "United Kingdom of Great Britain and Northern Ireland",
    "_CountryGB.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGD": "Grenada",
    "_CountryGD.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGE": "Georgia",
    "_CountryGE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGF": "French Guiana",
    "_CountryGF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGG": "Guernsey",
    "_CountryGG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGH": "Ghana",
    "_CountryGH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGI": "Gibraltar",
    "_CountryGI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGL": "Greenland",
    "_CountryGL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGM": "Gambia",
    "_CountryGM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGN": "Guinea",
    "_CountryGN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGP": "Guadeloupe",
    "_CountryGP.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGQ": "Equatorial Guinea",
    "_CountryGQ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGR": "Greece",
    "_CountryGR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGS": "South Georgia and the South Sandwich Islands",
    "_CountryGS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGT": "Guatemala",
    "_CountryGT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGU": "Guam",
    "_CountryGU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGW": "Guinea-Bissau",
    "_CountryGW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryGY": "Guyana",
    "_CountryGY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryHK": "Hong Kong",
    "_CountryHK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryHM": "Heard Island and McDonald Islands",
    "_CountryHM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryHN": "Honduras",
    "_CountryHN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryHR": "Croatia",
    "_CountryHR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryHT": "Haiti",
    "_CountryHT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryHU": "Hungary",
    "_CountryHU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryID": "Indonesia",
    "_CountryID.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIE": "Ireland",
    "_CountryIE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIL": "Israel",
    "_CountryIL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIM": "Isle of Man",
    "_CountryIM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIN": "India",
    "_CountryIN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIO": "British Indian Ocean Territory",
    "_CountryIO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIQ": "Iraq",
    "_CountryIQ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIR": "Iran (Islamic Republic of)",
    "_CountryIR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIS": "Iceland",
    "_CountryIS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryIT": "Italy",
    "_CountryIT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryJE": "Jersey",
    "_CountryJE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryJM": "Jamaica",
    "_CountryJM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryJO": "Jordan",
    "_CountryJO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryJP": "Japan",
    "_CountryJP.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKE": "Kenya",
    "_CountryKE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKG": "Kyrgyzstan",
    "_CountryKG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKH": "Cambodia",
    "_CountryKH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKI": "Kiribati",
    "_CountryKI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKM": "Comoros",
    "_CountryKM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKN": "Saint Kitts and Nevis",
    "_CountryKN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKP": "Korea (Democratic People's Republic of)",
    "_CountryKP.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKR": "Korea (Republic of)",
    "_CountryKR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKW": "Kuwait",
    "_CountryKW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKY": "Cayman Islands",
    "_CountryKY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryKZ": "Kazakhstan",
    "_CountryKZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLA": "Lao People's Democratic Republic",
    "_CountryLA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLB": "Lebanon",
    "_CountryLB.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLC": "Saint Lucia",
    "_CountryLC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLI": "Liechtenstein",
    "_CountryLI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLK": "Sri Lanka",
    "_CountryLK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLR": "Liberia",
    "_CountryLR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLS": "Lesotho",
    "_CountryLS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLT": "Lithuania",
    "_CountryLT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLU": "Luxembourg",
    "_CountryLU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLV": "Latvia",
    "_CountryLV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryLY": "Libya",
    "_CountryLY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMA": "Morocco",
    "_CountryMA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMC": "Monaco",
    "_CountryMC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMD": "Moldova (Republic of)",
    "_CountryMD.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryME": "Montenegro",
    "_CountryME.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMF": "Saint Martin (Collectivity of France)",
    "_CountryMF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMG": "Madagascar",
    "_CountryMG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMH": "Marshall Islands",
    "_CountryMH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMK": "Macedonia (The former Yugoslav Republic of)",
    "_CountryMK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryML": "Mali",
    "_CountryML.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMM": "Myanmar",
    "_CountryMM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMN": "Mongolia",
    "_CountryMN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMO": "Macao",
    "_CountryMO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMP": "Northern Mariana Islands",
    "_CountryMP.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMQ": "Martinique",
    "_CountryMQ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMR": "Mauritania",
    "_CountryMR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMS": "Montserrat",
    "_CountryMS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMT": "Malta",
    "_CountryMT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMU": "Mauritius",
    "_CountryMU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMV": "Maldives",
    "_CountryMV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMW": "Malawi",
    "_CountryMW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMX": "Mexico",
    "_CountryMX.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMY": "Malaysia",
    "_CountryMY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryMZ": "Mozambique",
    "_CountryMZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNA": "Namibia",
    "_CountryNA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNC": "New Caledonia",
    "_CountryNC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNE": "Niger",
    "_CountryNE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNF": "Norfolk Island",
    "_CountryNF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNG": "Nigeria",
    "_CountryNG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNI": "Nicaragua",
    "_CountryNI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNL": "Netherlands",
    "_CountryNL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNO": "Norway",
    "_CountryNO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNP": "Nepal",
    "_CountryNP.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNR": "Nauru",
    "_CountryNR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNU": "Niue",
    "_CountryNU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryNZ": "New Zealand",
    "_CountryNZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryOM": "Oman",
    "_CountryOM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPA": "Panama",
    "_CountryPA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPE": "Peru",
    "_CountryPE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPF": "French Polynesia",
    "_CountryPF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPG": "Papua New Guinea",
    "_CountryPG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPH": "Philippines",
    "_CountryPH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPK": "Pakistan",
    "_CountryPK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPL": "Poland",
    "_CountryPL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPM": "Saint Pierre and Miquelon",
    "_CountryPM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPN": "Pitcairn",
    "_CountryPN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPR": "Puerto Rico",
    "_CountryPR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPS": "Palestine (State of)",
    "_CountryPS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPT": "Portugal",
    "_CountryPT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPW": "Palau",
    "_CountryPW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryPY": "Paraguay",
    "_CountryPY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryQA": "Qatar",
    "_CountryQA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryRE": "Réunion",
    "_CountryRE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryRO": "Romania",
    "_CountryRO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryRS": "Serbia",
    "_CountryRS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryRU": "Russian Federation",
    "_CountryRU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryRW": "Rwanda",
    "_CountryRW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySA": "Saudi Arabia",
    "_CountrySA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySB": "Solomon Islands",
    "_CountrySB.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySC": "Seychelles",
    "_CountrySC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySD": "Sudan",
    "_CountrySD.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySE": "Sweden",
    "_CountrySE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySG": "Singapore",
    "_CountrySG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySH": "Saint Helena, Ascension and Tristan da Cunha",
    "_CountrySH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySI": "Slovenia",
    "_CountrySI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySJ": "Svalbard and Jan Mayen",
    "_CountrySJ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySK": "Slovakia",
    "_CountrySK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySL": "Sierra Leone",
    "_CountrySL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySM": "San Marino",
    "_CountrySM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySN": "Senegal",
    "_CountrySN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySO": "Somalia",
    "_CountrySO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySR": "Suriname",
    "_CountrySR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySS": "South Sudan",
    "_CountrySS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryST": "Sao Tome and Principe",
    "_CountryST.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySubdivision": "State/Province",
    "_CountrySubdivision.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "CountrySubdivisionAT1": "Burgenland",
    "_CountrySubdivisionAT1.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT2": "Carinthia",
    "_CountrySubdivisionAT2.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT3": "Lower Austria",
    "_CountrySubdivisionAT3.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT4": "Upper Austria",
    "_CountrySubdivisionAT4.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT5": "Salzburg",
    "_CountrySubdivisionAT5.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT6": "Styria",
    "_CountrySubdivisionAT6.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT7": "Tyrol",
    "_CountrySubdivisionAT7.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT8": "Vorarlberg",
    "_CountrySubdivisionAT8.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAT9": "Vienna",
    "_CountrySubdivisionAT9.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUACT": "Australian Capital Territory",
    "_CountrySubdivisionAUACT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUNSW": "New South Wales",
    "_CountrySubdivisionAUNSW.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUNT": "Northern Territory",
    "_CountrySubdivisionAUNT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUQLD": "Queensland",
    "_CountrySubdivisionAUQLD.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUSA": "South Australia",
    "_CountrySubdivisionAUSA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUTAS": "Tasmania",
    "_CountrySubdivisionAUTAS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUVIC": "Victoria",
    "_CountrySubdivisionAUVIC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionAUWA": "Western Australia",
    "_CountrySubdivisionAUWA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCAAB": "Alberta",
    "_CountrySubdivisionCAAB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCABC": "British Columbia",
    "_CountrySubdivisionCABC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCAMB": "Manitoba",
    "_CountrySubdivisionCAMB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCANB": "New Brunswick",
    "_CountrySubdivisionCANB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCANL": "Newfoundland and Labrador",
    "_CountrySubdivisionCANL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCANS": "Nova Scotia",
    "_CountrySubdivisionCANS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCANT": "Northwest Territories",
    "_CountrySubdivisionCANT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCANU": "Nunavut",
    "_CountrySubdivisionCANU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCAON": "Ontario",
    "_CountrySubdivisionCAON.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCAPE": "Prince Edward Island",
    "_CountrySubdivisionCAPE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCAQC": "Quebec",
    "_CountrySubdivisionCAQC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCASK": "Saskatchewan",
    "_CountrySubdivisionCASK.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCAYT": "Yukon",
    "_CountrySubdivisionCAYT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHAG": "Aargau",
    "_CountrySubdivisionCHAG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHAI": "Appenzell Innerrhoden",
    "_CountrySubdivisionCHAI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHAR": "Appenzell Ausserrhoden",
    "_CountrySubdivisionCHAR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHBE": "Berne",
    "_CountrySubdivisionCHBE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHBL": "Basel-Landschaft",
    "_CountrySubdivisionCHBL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHBS": "Basel-Stadt",
    "_CountrySubdivisionCHBS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHFR": "Fribourg",
    "_CountrySubdivisionCHFR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHGE": "Geneva",
    "_CountrySubdivisionCHGE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHGL": "Glarus",
    "_CountrySubdivisionCHGL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHGR": "Grisons",
    "_CountrySubdivisionCHGR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHJU": "Jura",
    "_CountrySubdivisionCHJU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHLU": "Lucerne",
    "_CountrySubdivisionCHLU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHNE": "Neuchâtel",
    "_CountrySubdivisionCHNE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHNW": "Nidwalden",
    "_CountrySubdivisionCHNW.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHOW": "Obwalden",
    "_CountrySubdivisionCHOW.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHSG": "St. Gallen",
    "_CountrySubdivisionCHSG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHSH": "Schaffhausen",
    "_CountrySubdivisionCHSH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHSO": "Solothurn",
    "_CountrySubdivisionCHSO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHSZ": "Schwyz",
    "_CountrySubdivisionCHSZ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHTG": "Thurgau",
    "_CountrySubdivisionCHTG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHTI": "Ticino",
    "_CountrySubdivisionCHTI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHUR": "Uri",
    "_CountrySubdivisionCHUR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHVD": "Vaud",
    "_CountrySubdivisionCHVD.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHVS": "Valais",
    "_CountrySubdivisionCHVS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHZG": "Zug",
    "_CountrySubdivisionCHZG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionCHZH": "Zürich",
    "_CountrySubdivisionCHZH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEBB": "Brandenburg",
    "_CountrySubdivisionDEBB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEBE": "Berlin",
    "_CountrySubdivisionDEBE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEBW": "Baden-Württemberg",
    "_CountrySubdivisionDEBW.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEBY": "Bavaria",
    "_CountrySubdivisionDEBY.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEHB": "Bremen",
    "_CountrySubdivisionDEHB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEHE": "Hesse",
    "_CountrySubdivisionDEHE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEHH": "Hamburg",
    "_CountrySubdivisionDEHH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEMV": "Mecklenburg-Western Pomerania",
    "_CountrySubdivisionDEMV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDENI": "Lower Saxony",
    "_CountrySubdivisionDENI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDENW": "North Rhine-Westphalia",
    "_CountrySubdivisionDENW.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDERP": "Rhineland-Palatinate",
    "_CountrySubdivisionDERP.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDESH": "Schleswig-Holstein",
    "_CountrySubdivisionDESH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDESL": "Saarland",
    "_CountrySubdivisionDESL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDESN": "Saxony",
    "_CountrySubdivisionDESN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDEST": "Saxony-Anhalt",
    "_CountrySubdivisionDEST.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionDETH": "Thuringia",
    "_CountrySubdivisionDETH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESA": "Alicante",
    "_CountrySubdivisionESA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESAB": "Albacete",
    "_CountrySubdivisionESAB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESAL": "Almería",
    "_CountrySubdivisionESAL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESAV": "Ávila",
    "_CountrySubdivisionESAV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESB": "Barcelona",
    "_CountrySubdivisionESB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESBA": "Badajoz",
    "_CountrySubdivisionESBA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESBI": "Bizkaia",
    "_CountrySubdivisionESBI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESBU": "Burgos",
    "_CountrySubdivisionESBU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESC": "A Coruña",
    "_CountrySubdivisionESC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESCA": "Cádiz",
    "_CountrySubdivisionESCA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESCC": "Cáceres",
    "_CountrySubdivisionESCC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESCE": "Ceuta",
    "_CountrySubdivisionESCE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESCO": "Córdoba",
    "_CountrySubdivisionESCO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESCR": "Ciudad Real",
    "_CountrySubdivisionESCR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESCS": "Castellón",
    "_CountrySubdivisionESCS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESCU": "Cuenca",
    "_CountrySubdivisionESCU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESGC": "Las Palmas",
    "_CountrySubdivisionESGC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESGI": "Girona",
    "_CountrySubdivisionESGI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESGR": "Granada",
    "_CountrySubdivisionESGR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESGU": "Guadalajara",
    "_CountrySubdivisionESGU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESH": "Huelva",
    "_CountrySubdivisionESH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESHU": "Huesca",
    "_CountrySubdivisionESHU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESJ": "Jaén",
    "_CountrySubdivisionESJ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESL": "Lleida",
    "_CountrySubdivisionESL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESLE": "León",
    "_CountrySubdivisionESLE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESLO": "La Rioja",
    "_CountrySubdivisionESLO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESLU": "Lugo",
    "_CountrySubdivisionESLU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESM": "Madrid",
    "_CountrySubdivisionESM.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESMA": "Málaga",
    "_CountrySubdivisionESMA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESML": "Melilla",
    "_CountrySubdivisionESML.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESMU": "Murcia",
    "_CountrySubdivisionESMU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESNA": "Navarra",
    "_CountrySubdivisionESNA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESO": "Asturias",
    "_CountrySubdivisionESO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESOR": "Ourense",
    "_CountrySubdivisionESOR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESP": "Palencia",
    "_CountrySubdivisionESP.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESPM": "Balears",
    "_CountrySubdivisionESPM.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESPO": "Pontevedra",
    "_CountrySubdivisionESPO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESS": "Cantabria",
    "_CountrySubdivisionESS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESSA": "Salamanca",
    "_CountrySubdivisionESSA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESSE": "Sevilla",
    "_CountrySubdivisionESSE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESSG": "Segovia",
    "_CountrySubdivisionESSG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESSO": "Soria",
    "_CountrySubdivisionESSO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESSS": "Gipuzkoa",
    "_CountrySubdivisionESSS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionEST": "Tarragona",
    "_CountrySubdivisionEST.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESTE": "Teruel",
    "_CountrySubdivisionESTE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESTF": "Santa Cruz de Tenerife",
    "_CountrySubdivisionESTF.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESTO": "Toledo",
    "_CountrySubdivisionESTO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESV": "Valencia",
    "_CountrySubdivisionESV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESVA": "Valladolid",
    "_CountrySubdivisionESVA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESVI": "Álava",
    "_CountrySubdivisionESVI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESZ": "Zaragoza",
    "_CountrySubdivisionESZ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionESZA": "Zamora",
    "_CountrySubdivisionESZA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAG": "Agrigento",
    "_CountrySubdivisionITAG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAL": "Alessandria",
    "_CountrySubdivisionITAL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAN": "Ancona",
    "_CountrySubdivisionITAN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAO": "Aosta",
    "_CountrySubdivisionITAO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAP": "Ascoli Piceno",
    "_CountrySubdivisionITAP.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAQ": "L'Aquila",
    "_CountrySubdivisionITAQ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAR": "Arezzo",
    "_CountrySubdivisionITAR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAT": "Asti",
    "_CountrySubdivisionITAT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITAV": "Avellino",
    "_CountrySubdivisionITAV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBA": "Bari",
    "_CountrySubdivisionITBA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBG": "Bergamo",
    "_CountrySubdivisionITBG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBI": "Biella",
    "_CountrySubdivisionITBI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBL": "Belluno",
    "_CountrySubdivisionITBL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBN": "Benevento",
    "_CountrySubdivisionITBN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBO": "Bologna",
    "_CountrySubdivisionITBO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBR": "Brindisi",
    "_CountrySubdivisionITBR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBS": "Brescia",
    "_CountrySubdivisionITBS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBT": "Barletta-Andria-Trani",
    "_CountrySubdivisionITBT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITBZ": "Bolzano",
    "_CountrySubdivisionITBZ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCA": "Cagliari",
    "_CountrySubdivisionITCA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCB": "Campobasso",
    "_CountrySubdivisionITCB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCE": "Caserta",
    "_CountrySubdivisionITCE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCH": "Chieti",
    "_CountrySubdivisionITCH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCI": "Carbonia-Iglesias",
    "_CountrySubdivisionITCI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCL": "Caltanissetta",
    "_CountrySubdivisionITCL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCN": "Cuneo",
    "_CountrySubdivisionITCN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCO": "Como",
    "_CountrySubdivisionITCO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCR": "Cremona",
    "_CountrySubdivisionITCR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCS": "Cosenza",
    "_CountrySubdivisionITCS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCT": "Catania",
    "_CountrySubdivisionITCT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITCZ": "Catanzaro",
    "_CountrySubdivisionITCZ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITEN": "Enna",
    "_CountrySubdivisionITEN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITFC": "Forli-Cesena",
    "_CountrySubdivisionITFC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITFE": "Ferrara",
    "_CountrySubdivisionITFE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITFG": "Foggia",
    "_CountrySubdivisionITFG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITFI": "Firenze",
    "_CountrySubdivisionITFI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITFM": "Fermo",
    "_CountrySubdivisionITFM.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITFR": "Frosinone",
    "_CountrySubdivisionITFR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITGE": "Genova",
    "_CountrySubdivisionITGE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITGO": "Gorizia",
    "_CountrySubdivisionITGO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITGR": "Grosseto",
    "_CountrySubdivisionITGR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITIM": "Imperia",
    "_CountrySubdivisionITIM.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITIS": "Isernia",
    "_CountrySubdivisionITIS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITKR": "Crotone",
    "_CountrySubdivisionITKR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITLC": "Lecco",
    "_CountrySubdivisionITLC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITLE": "Lecce",
    "_CountrySubdivisionITLE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITLI": "Livorno",
    "_CountrySubdivisionITLI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITLO": "Lodi",
    "_CountrySubdivisionITLO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITLT": "Latina",
    "_CountrySubdivisionITLT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITLU": "Lucca",
    "_CountrySubdivisionITLU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITMB": "Monza and Brianza",
    "_CountrySubdivisionITMB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITMC": "Macerata",
    "_CountrySubdivisionITMC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITME": "Messina",
    "_CountrySubdivisionITME.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITMI": "Milano",
    "_CountrySubdivisionITMI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITMN": "Mantova",
    "_CountrySubdivisionITMN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITMO": "Modena",
    "_CountrySubdivisionITMO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITMS": "Massa and Carrara",
    "_CountrySubdivisionITMS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITMT": "Matera",
    "_CountrySubdivisionITMT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITNA": "Napoli",
    "_CountrySubdivisionITNA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITNO": "Novara",
    "_CountrySubdivisionITNO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITNU": "Nuoro",
    "_CountrySubdivisionITNU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITOG": "Ogliastra",
    "_CountrySubdivisionITOG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITOR": "Oristano",
    "_CountrySubdivisionITOR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITOT": "Olbia-Tempio",
    "_CountrySubdivisionITOT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPA": "Palermo",
    "_CountrySubdivisionITPA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPC": "Piacenza",
    "_CountrySubdivisionITPC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPD": "Padova",
    "_CountrySubdivisionITPD.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPE": "Pescara",
    "_CountrySubdivisionITPE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPG": "Perugia",
    "_CountrySubdivisionITPG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPI": "Pisa",
    "_CountrySubdivisionITPI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPN": "Pordenone",
    "_CountrySubdivisionITPN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPO": "Prato",
    "_CountrySubdivisionITPO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPR": "Parma",
    "_CountrySubdivisionITPR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPT": "Pistoia",
    "_CountrySubdivisionITPT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPU": "Pesaro and Urbino",
    "_CountrySubdivisionITPU.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPV": "Pavia",
    "_CountrySubdivisionITPV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITPZ": "Potenza",
    "_CountrySubdivisionITPZ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRA": "Ravenna",
    "_CountrySubdivisionITRA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRC": "Reggio Calabria",
    "_CountrySubdivisionITRC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRE": "Reggio Emilia",
    "_CountrySubdivisionITRE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRG": "Ragusa",
    "_CountrySubdivisionITRG.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRI": "Rieti",
    "_CountrySubdivisionITRI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRM": "Roma",
    "_CountrySubdivisionITRM.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRN": "Rimini",
    "_CountrySubdivisionITRN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITRO": "Rovigo",
    "_CountrySubdivisionITRO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITSA": "Salerno",
    "_CountrySubdivisionITSA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITSI": "Siena",
    "_CountrySubdivisionITSI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITSO": "Sondrio",
    "_CountrySubdivisionITSO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITSP": "La Spezia",
    "_CountrySubdivisionITSP.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITSR": "Siracusa",
    "_CountrySubdivisionITSR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITSS": "Sassari",
    "_CountrySubdivisionITSS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITSV": "Savona",
    "_CountrySubdivisionITSV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTA": "Taranto",
    "_CountrySubdivisionITTA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTE": "Teramo",
    "_CountrySubdivisionITTE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTN": "Trento",
    "_CountrySubdivisionITTN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTO": "Torino",
    "_CountrySubdivisionITTO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTP": "Trapani",
    "_CountrySubdivisionITTP.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTR": "Terni",
    "_CountrySubdivisionITTR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTS": "Trieste",
    "_CountrySubdivisionITTS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITTV": "Treviso",
    "_CountrySubdivisionITTV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITUD": "Udine",
    "_CountrySubdivisionITUD.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVA": "Varese",
    "_CountrySubdivisionITVA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVB": "Verbano-Cusio-Ossola",
    "_CountrySubdivisionITVB.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVC": "Vercelli",
    "_CountrySubdivisionITVC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVE": "Venezia",
    "_CountrySubdivisionITVE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVI": "Vicenza",
    "_CountrySubdivisionITVI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVR": "Verona",
    "_CountrySubdivisionITVR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVS": "Medio Campidano",
    "_CountrySubdivisionITVS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVT": "Viterbo",
    "_CountrySubdivisionITVT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionITVV": "Vibo Valentia",
    "_CountrySubdivisionITVV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSAK": "Alaska",
    "_CountrySubdivisionUSAK.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSAL": "Alabama",
    "_CountrySubdivisionUSAL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSAR": "Arkansas",
    "_CountrySubdivisionUSAR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSAZ": "Arizona",
    "_CountrySubdivisionUSAZ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSCA": "California",
    "_CountrySubdivisionUSCA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSCO": "Colorado",
    "_CountrySubdivisionUSCO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSCT": "Connecticut",
    "_CountrySubdivisionUSCT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSDC": "District of Columbia",
    "_CountrySubdivisionUSDC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSDE": "Delaware",
    "_CountrySubdivisionUSDE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSFL": "Florida",
    "_CountrySubdivisionUSFL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSGA": "Georgia",
    "_CountrySubdivisionUSGA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSHI": "Hawaii",
    "_CountrySubdivisionUSHI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSIA": "Iowa",
    "_CountrySubdivisionUSIA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSID": "Idaho",
    "_CountrySubdivisionUSID.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSIL": "Illinois",
    "_CountrySubdivisionUSIL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSIN": "Indiana",
    "_CountrySubdivisionUSIN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSKS": "Kansas",
    "_CountrySubdivisionUSKS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSKY": "Kentucky",
    "_CountrySubdivisionUSKY.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSLA": "Louisiana",
    "_CountrySubdivisionUSLA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSMA": "Massachusetts",
    "_CountrySubdivisionUSMA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSMD": "Maryland",
    "_CountrySubdivisionUSMD.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSME": "Maine",
    "_CountrySubdivisionUSME.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSMI": "Michigan",
    "_CountrySubdivisionUSMI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSMN": "Minnesota",
    "_CountrySubdivisionUSMN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSMO": "Missouri",
    "_CountrySubdivisionUSMO.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSMS": "Mississippi",
    "_CountrySubdivisionUSMS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSMT": "Montana",
    "_CountrySubdivisionUSMT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSNC": "North Carolina",
    "_CountrySubdivisionUSNC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSND": "North Dakota",
    "_CountrySubdivisionUSND.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSNE": "Nebraska",
    "_CountrySubdivisionUSNE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSNH": "New Hampshire",
    "_CountrySubdivisionUSNH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSNJ": "New Jersey",
    "_CountrySubdivisionUSNJ.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSNM": "New Mexico",
    "_CountrySubdivisionUSNM.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSNV": "Nevada",
    "_CountrySubdivisionUSNV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSNY": "New York",
    "_CountrySubdivisionUSNY.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSOH": "Ohio",
    "_CountrySubdivisionUSOH.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSOK": "Oklahoma",
    "_CountrySubdivisionUSOK.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSOR": "Oregon",
    "_CountrySubdivisionUSOR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSPA": "Pennsylvania",
    "_CountrySubdivisionUSPA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSPR": "Puerto Rico",
    "_CountrySubdivisionUSPR.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSRI": "Rhode Island",
    "_CountrySubdivisionUSRI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSSC": "South Carolina",
    "_CountrySubdivisionUSSC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSSD": "South Dakota",
    "_CountrySubdivisionUSSD.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSTN": "Tennessee",
    "_CountrySubdivisionUSTN.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSTX": "Texas",
    "_CountrySubdivisionUSTX.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSUT": "Utah",
    "_CountrySubdivisionUSUT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSVA": "Virginia",
    "_CountrySubdivisionUSVA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSVE": "Vermont",
    "_CountrySubdivisionUSVE.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSWA": "Washington",
    "_CountrySubdivisionUSWA.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSWI": "Wisconsin",
    "_CountrySubdivisionUSWI.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSWV": "West Virginia",
    "_CountrySubdivisionUSWV.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionUSWY": "Wyoming",
    "_CountrySubdivisionUSWY.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZAEC": "Eastern Cape",
    "_CountrySubdivisionZAEC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZAFS": "Free State",
    "_CountrySubdivisionZAFS.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZAGT": "Gauteng",
    "_CountrySubdivisionZAGT.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZALP": "Limpopo",
    "_CountrySubdivisionZALP.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZAMP": "Mpumalanga",
    "_CountrySubdivisionZAMP.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZANC": "Northern Cape",
    "_CountrySubdivisionZANC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZANL": "KwaZulu-Natal",
    "_CountrySubdivisionZANL.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZANW": "North West",
    "_CountrySubdivisionZANW.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySubdivisionZAWC": "Western Cape",
    "_CountrySubdivisionZAWC.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CountrySV": "El Salvador",
    "_CountrySV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySX": "Sint Maarten (Dutch Constituency)",
    "_CountrySX.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySY": "Syrian Arab Republic",
    "_CountrySY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountrySZ": "Swaziland",
    "_CountrySZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTC": "Turks and Caicos Islands",
    "_CountryTC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTD": "Chad",
    "_CountryTD.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTF": "French Southern Territories",
    "_CountryTF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTG": "Togo",
    "_CountryTG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTH": "Thailand",
    "_CountryTH.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTJ": "Tajikistan",
    "_CountryTJ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTK": "Tokelau",
    "_CountryTK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTL": "Timor-Leste",
    "_CountryTL.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTM": "Turkmenistan",
    "_CountryTM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTN": "Tunisia",
    "_CountryTN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTO": "Tonga",
    "_CountryTO.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTR": "Turkey",
    "_CountryTR.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTT": "Trinidad and Tobago",
    "_CountryTT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTV": "Tuvalu",
    "_CountryTV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTW": "Taiwan (Republic of China)",
    "_CountryTW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryTZ": "Tanzania (United Republic of)",
    "_CountryTZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryUA": "Ukraine",
    "_CountryUA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryUG": "Uganda",
    "_CountryUG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryUM": "United States Minor Outlying Islands",
    "_CountryUM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryUS": "United States of America",
    "_CountryUS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryUY": "Uruguay",
    "_CountryUY.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryUZ": "Uzbekistan",
    "_CountryUZ.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryVA": "Holy See",
    "_CountryVA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryVC": "Saint Vincent and the Grenadines",
    "_CountryVC.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryVE": "Venezuela (Bolivarian Republic of)",
    "_CountryVE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryVG": "Virgin Islands (British)",
    "_CountryVG.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryVI": "Virgin Islands (U.S.)",
    "_CountryVI.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryVN": "Vietnam",
    "_CountryVN.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryVU": "Vanuatu",
    "_CountryVU.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryWF": "Wallis and Futuna",
    "_CountryWF.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryWS": "Samoa",
    "_CountryWS.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryXK": "Kosovo",
    "_CountryXK.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryYE": "Yemen",
    "_CountryYE.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryYT": "Mayotte",
    "_CountryYT.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryZA": "South Africa",
    "_CountryZA.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryZM": "Zambia",
    "_CountryZM.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CountryZW": "Zimbabwe",
    "_CountryZW.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "Create": "Create",
    "_Create.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Created": "Created",
    "_Created.meta": {
      "Scopes": [ "Billing" ]
    },
    "CreateKey": "Create key",
    "_CreateKey.meta": {
      "Scopes": [ "Operator" ]
    },
    "CreateKeyPromptPlural": "Create your key",
    "_CreateKeyPromptPlural.meta": {
      "Scopes": [ "Operator" ]
    },
    "CreateKeyPromptSingular": "Create your keys",
    "_CreateKeyPromptSingular.meta": {
      "Scopes": [ "Operator" ]
    },
    "CreateNewAccount": "Create new account",
    "_CreateNewAccount.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CreatingReservation": "Creating reservation",
    "_CreatingReservation.meta": {
      "Scopes": [ "Distributor" ]
    },
    "CreditCard": "Payment card",
    "_CreditCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CreditCardCVV": "CVV",
    "_CreditCardCVV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CreditCardDeclinedErrorMessage": "Customer's card was declined.",
    "_CreditCardDeclinedErrorMessage.meta": {
      "Scopes": [ "Mail" ]
    },
    "CreditCardExpiration": "Expiration",
    "_CreditCardExpiration.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CreditCardNotAvailableError": "Booking successfully created but credit card was rejected by payment gateway. We will contact you directly.",
    "_CreditCardNotAvailableError.meta": {
      "Scopes": [ "Distributor" ]
    },
    "CreditCardNumber": "Payment card number",
    "_CreditCardNumber.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "CreditCardUsageInfo": "Cannot complete order without credit card details for guaranteed payment.",
    "_CreditCardUsageInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CuratedBy": "Curated by",
    "_CuratedBy.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Currency": "Currency",
    "_Currency.meta": {
      "Scopes": [ "Operator" ]
    },
    "Customer": "Customer",
    "_Customer.meta": {
      "Scopes": [ "Billing" ]
    },
    "CustomerIdentifier": "Customer identifier",
    "_CustomerIdentifier.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CustomerNote": "Customer note",
    "_CustomerNote.meta": {
      "Scopes": [ "Navigator" ]
    },
    "CutCheckInTimeInHalf": "Cut check-in time in half.",
    "_CutCheckInTimeInHalf.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DangerZone": "Danger zone",
    "_DangerZone.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DataProvidedNotValid": "Provided data is not valid",
    "_DataProvidedNotValid.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DateBeforeMinDateErrorMessage": "Date cannot be before {minDate}",
    "_DateBeforeMinDateErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DatePlural": "Dates",
    "_DatePlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Day": "Day",
    "_Day.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DayFriday": "Friday",
    "_DayFriday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayMonday": "Monday",
    "_DayMonday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DaySaturday": "Saturday",
    "_DaySaturday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayShortFriday": "Fri",
    "_DayShortFriday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayShortMonday": "Mon",
    "_DayShortMonday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayShortSaturday": "Sat",
    "_DayShortSaturday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayShortSunday": "Sun",
    "_DayShortSunday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayShortThursday": "Thu",
    "_DayShortThursday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayShortTuesday": "Tue",
    "_DayShortTuesday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayShortWednesday": "Wed",
    "_DayShortWednesday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DaySunday": "Sunday",
    "_DaySunday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayThursday": "Thursday",
    "_DayThursday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayTuesday": "Tuesday",
    "_DayTuesday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DayWednesday": "Wednesday",
    "_DayWednesday.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "Delete": "Delete",
    "_Delete.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteAccount": "Delete account",
    "_DeleteAccount.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteAccountDescription": "Please note that account deletion is permanent. Upon deletion, all personal data will be cleared and you will not be able to sign in using your account details in the future. Furthermore, a request for deletion will also be sent to each property with which you have shared your data.",
    "_DeleteAccountDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteAccountMessage": "Are you sure you would like to delete your account? This action cannot be undone.",
    "_DeleteAccountMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteAddress": "Delete address",
    "_DeleteAddress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteAddressMessage": "Are you sure you would like to delete this address? This action cannot be undone.",
    "_DeleteAddressMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteCompanion": "Delete companion",
    "_DeleteCompanion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteDocument": "Delete document",
    "_DeleteDocument.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DeleteDocumentMessage": "Are you sure you would like to delete this document? This action cannot be undone.",
    "_DeleteDocumentMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Departure": "Departure",
    "_Departure.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "DepartureDate": "Departure date",
    "_DepartureDate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DetailPlural": "Details",
    "_DetailPlural.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "DetailsMissing": "Details missing",
    "_DetailsMissing.meta": {
      "Scopes": [ "Operator" ]
    },
    "DiscardBasket": "Discard basket contents",
    "_DiscardBasket.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DiscardButton": "Discard",
    "_DiscardButton.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DiscardChanges": "Discard changes",
    "_DiscardChanges.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DiscardPaymentCardChangesQuestion": "Discard changes made to your payment card details?",
    "_DiscardPaymentCardChangesQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DiscountCode": "Discount code",
    "_DiscountCode.meta": {
      "Scopes": [ "Distributor" ]
    },
    "DiscoverWorldAroundYou": "Discover the world around you.",
    "_DiscoverWorldAroundYou.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Dismiss": "Dismiss",
    "_Dismiss.meta": {
      "Scopes": [ "Distributor" ]
    },
    "DistributorFatalErrorMessage": "We're very sorry, an unexpected error has occurred. If it happens again, please contact us directly at {supportEmail}.",
    "_DistributorFatalErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "DistributorQuotaExceededErrorMessage": "You have exceeded the request limit. Please try again later.",
    "_DistributorQuotaExceededErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "DistributorSessionExpiredErrorMessage": "Your session has expired. Please click REFRESH button below to start again.",
    "_DistributorSessionExpiredErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "DistributorTimeoutErrorMessage": "Operation has timed out. Please try again later.",
    "_DistributorTimeoutErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "DocumentDeleteSuccessMessage": "Document successfully deleted.",
    "_DocumentDeleteSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DocumentScanningRequirementMachineReadableZone": "The document must have a machine-readable zone.",
    "_DocumentScanningRequirementMachineReadableZone.meta": {
      "Scopes": [ "Operator" ]
    },
    "DoesNotInclude": "Does not include",
    "_DoesNotInclude.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Done": "Done",
    "_Done.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Dorm": "Dorm",
    "_Dorm.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "DormPlural": "Dorms",
    "_DormPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "DownloadApplePass": "Download Apple Pass",
    "_DownloadApplePass.meta": {
      "Scopes": [ "Navigator" ]
    },
    "DriversLicense": "Driver's licence",
    "_DriversLicense.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "DueDate": "Due date",
    "_DueDate.meta": {
      "Scopes": [ "Billing" ]
    },
    "EasyCheckInMotto": "Check in easily and comfortably from wherever you are.",
    "_EasyCheckInMotto.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Edit": "Edit",
    "_Edit.meta": {
      "Scopes": [ "Navigator" ]
    },
    "EditProfile": "Edit profile",
    "_EditProfile.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Email": "Email",
    "_Email.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "EmailNotificationPlural": "Email notifications",
    "_EmailNotificationPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "EmailNotValid": "Please provide a valid email address.",
    "_EmailNotValid.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "EmptyBasketFirstPrompt": "Please empty your basket and try again.",
    "_EmptyBasketFirstPrompt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "EnjoyYourStay": "Enjoy your stay!",
    "_EnjoyYourStay.meta": {
      "Scopes": [ "Operator" ]
    },
    "EnterNewPassword": "Enter your new password.",
    "_EnterNewPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "EnterOldPassword": "Enter your old password.",
    "_EnterOldPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "EnterpriseHasNoGateway": "This enterprise does not have an online payment gateway. The property will request payment when you arrive.",
    "_EnterpriseHasNoGateway.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErroneousPoliceExportBody": "<p>                    Dear Mewser,                </p>                <p>                    We found some errors in the attached police export. There is either missing data or something was reported incorrectly. The attached .zip file contains a text file with errors, where you can see what needs to be corrected.                </p>                <p>                    Compare this list to the Mews Customer Profiles Report and complete the missing information in each customer profile. Please send again once these errors are corrected.                </p>                <p>                    Kind regards,<br/>                    The Mews Team                </p>",
    "_ErroneousPoliceExportBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "ErroneousPoliceExportSubject": "Errors in foreign police report for {date}",
    "_ErroneousPoliceExportSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "ErrorCallDevice": "Cannot call from this device.",
    "_ErrorCallDevice.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorCreditCardAdd": "Cannot add credit card.",
    "_ErrorCreditCardAdd.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorCreditCardAddMerchant": "Cannot add a credit card to this merchant.",
    "_ErrorCreditCardAddMerchant.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorMailSendDevice": "Cannot send mail from this device.",
    "_ErrorMailSendDevice.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorMessageThreadFind": "Cannot find provided content in messages.",
    "_ErrorMessageThreadFind.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorNavigatorSignInTemplate": "Cannot sign in to Navigator using {accountType}.",
    "_ErrorNavigatorSignInTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorNoProductsInCategory": "Cannot find products in category",
    "_ErrorNoProductsInCategory.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorNotificationMark": "Cannot mark notification as seen.",
    "_ErrorNotificationMark.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorOrderFind": "Cannot find order.",
    "_ErrorOrderFind.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorPasswordChange": "Cannot change password.",
    "_ErrorPasswordChange.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorPasswordReset": "Cannot reset password.",
    "_ErrorPasswordReset.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorProcessOrder": "Cannot process order.",
    "_ErrorProcessOrder.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorServiceDetailsLoad": "Cannot load service details.",
    "_ErrorServiceDetailsLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorServicesLoad": "Cannot load services.",
    "_ErrorServicesLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorSignInFacebook": "Cannot sign in with Facebook.",
    "_ErrorSignInFacebook.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorSigningInWithFacebook": "Cannot sign in with Facebook.",
    "_ErrorSigningInWithFacebook.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ErrorSignUp": "Cannot sign up.",
    "_ErrorSignUp.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Europe": "Europe",
    "_Europe.meta": {
      "Scopes": [ "Operator" ]
    },
    "EventReportReservationEventTypeCheckedIn": "Checked in",
    "_EventReportReservationEventTypeCheckedIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "EventReportReservationEventTypeCheckedOut": "Checked out",
    "_EventReportReservationEventTypeCheckedOut.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ExcludingTaxesFees": "Excluding taxes & fees",
    "_ExcludingTaxesFees.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "ExistingCreditCardInfo": "Use the same card that you used for your last visit or you add a new card.",
    "_ExistingCreditCardInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ExpirationDate": "Expiration date",
    "_ExpirationDate.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "ExtraBeds": "Extra beds",
    "_ExtraBeds.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ExtraPricingTypeOnce": "Once",
    "_ExtraPricingTypeOnce.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "ExtraPricingTypePerNight": "Per night",
    "_ExtraPricingTypePerNight.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "ExtraPricingTypePerPerson": "Per person",
    "_ExtraPricingTypePerPerson.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "ExtraPricingTypePerPersonNight": "Per person per night",
    "_ExtraPricingTypePerPersonNight.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "FatalErrorMessage": "Unexpected error. Please contact support if errors continue.",
    "_FatalErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FeedbackQuestionAfterStay": "We hope you had a great time with us at {hotel}. We would love to hear your thoughts about what you loved and how we can improve. Do you have any feedback for us?",
    "_FeedbackQuestionAfterStay.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FillBothNames": "Please provide both first and last name.",
    "_FillBothNames.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FilterByPrice": "Filter by price",
    "_FilterByPrice.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Find": "Find",
    "_Find.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FindBookingPrompt": "Let's find your reservation",
    "_FindBookingPrompt.meta": {
      "Scopes": [ "Operator" ]
    },
    "FindCompanion": "Find companion",
    "_FindCompanion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Finish": "Finish",
    "_Finish.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FinishBooking": "Finish booking",
    "_FinishBooking.meta": {
      "Scopes": [ "Distributor" ]
    },
    "FinishOnlineCheckInMayNeed": "To finish the online check-in you may need:",
    "_FinishOnlineCheckInMayNeed.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FinishOrClearBookingMessage": "Clear your basket and continue browsing?",
    "_FinishOrClearBookingMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "FinishProfile": "Finish profile",
    "_FinishProfile.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FirstName": "First name",
    "_FirstName.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "FirstNameIdCard": "First name (as stated on your ID)",
    "_FirstNameIdCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "FiscalRecord": "Fiscal record",
    "_FiscalRecord.meta": {
      "Scopes": [ "Billing" ]
    },
    "FollowExampleInVideo": "Follow the example in the video",
    "_FollowExampleInVideo.meta": {
      "Scopes": [ "Operator" ]
    },
    "ForeignPoliceNotificationBody": "<p>                Dear Mewser,            </p>            <p>                The {reportLinkHtml} is currently <strong>{completion}</strong> complete!            </p>            <p>                Please make sure that all data is properly submitted and the report is <strong>completed</strong> before it is sent automatically on {sendDate}.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_ForeignPoliceNotificationBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "ForeignPoliceNotificationSubject": "Foreign Police report for {date}",
    "_ForeignPoliceNotificationSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "ForeignPoliceReportBody": "<p>                Dear Mewser,            </p>            <p>                Please find the attached police report for {enterpriseName} on {date}.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_ForeignPoliceReportBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "Free": "Free",
    "_Free.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "FreeChange": "Free change",
    "_FreeChange.meta": {
      "Scopes": [ "Operator" ]
    },
    "From": "From",
    "_From.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "FullName": "Full name",
    "_FullName.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Future": "Future",
    "_Future.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Gender": "Gender",
    "_Gender.meta": {
      "Scopes": [ "Operator" ]
    },
    "GenderFemale": "Female",
    "_GenderFemale.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "GenderMale": "Male",
    "_GenderMale.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "GeneralErrorMessage": "Something went wrong. Please, contact the reception.",
    "_GeneralErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "GetAround": "Get around",
    "_GetAround.meta": {
      "Scopes": [ "Navigator" ]
    },
    "GetAvailability": "Get availability",
    "_GetAvailability.meta": {
      "Scopes": [ "Distributor" ]
    },
    "GetInspiredByGuidesMotto": "Get inspired by these guides - kindly provided by properties and people nearby.",
    "_GetInspiredByGuidesMotto.meta": {
      "Scopes": [ "Navigator" ]
    },
    "GivenNames": "Given names",
    "_GivenNames.meta": {
      "Scopes": [ "Operator" ]
    },
    "GoBack": "Go back",
    "_GoBack.meta": {
      "Scopes": [ "Navigator" ]
    },
    "GoHomeText": "Any progress you've made will be lost.",
    "_GoHomeText.meta": {
      "Scopes": [ "Operator" ]
    },
    "GoHomeTitle": "Quit?",
    "_GoHomeTitle.meta": {
      "Scopes": [ "Operator" ]
    },
    "GoodMorningCityQuestion": "Good morning! Do you need any recommendations to help you explore {city}?",
    "_GoodMorningCityQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "GoodNightRestQuestion": "Good morning! Did you have a good night's rest?",
    "_GoodNightRestQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "GoToPendingPayments": "Go to pending payments",
    "_GoToPendingPayments.meta": {
      "Scopes": [ "Navigator" ]
    },
    "GoToReception": "Go to reception",
    "_GoToReception.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Group": "Group",
    "_Group.meta": {
      "Scopes": [ "Operator" ]
    },
    "Guest": "Guest",
    "_Guest.meta": {
      "Scopes": [ "Navigator" ]
    },
    "GuestDetails": "Guest details",
    "_GuestDetails.meta": {
      "Scopes": [ "Distributor" ]
    },
    "GuidesOverlayTutorial": "Swipe left and right to switch between guides.",
    "_GuidesOverlayTutorial.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Help": "Help",
    "_Help.meta": {
      "Scopes": [ "Operator" ]
    },
    "HintAgreePrivacyPolicy": "Please agree with the privacy policy to continue.",
    "_HintAgreePrivacyPolicy.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintAgreeTermsConditions": "Please agree with terms and conditions to continue.",
    "_HintAgreeTermsConditions.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintCheckDuplicateAccount": "Email address is already associated with an account.",
    "_HintCheckDuplicateAccount.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintContactManagement": "Please contact property management for further assistance.",
    "_HintContactManagement.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintContactProperty": "Contact the property for more information.",
    "_HintContactProperty.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintCreditCardUsage": "Property may use this card for any charges or preauthorizations relating to your upcoming stay.",
    "_HintCreditCardUsage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintCreditCardUsageMewsPayment": "Property may use this card for any charges or preauthorizations relating to your upcoming stay. Payment will be made via Mews payment platform.",
    "_HintCreditCardUsageMewsPayment.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintEnterPassword": "Please enter a password.",
    "_HintEnterPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintEnterTemplate": "Please enter {fieldName}.",
    "_HintEnterTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintFillAllData": "Please complete all required fields",
    "_HintFillAllData.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintFillNotes": "Please complete notes. This field is required.",
    "_HintFillNotes.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintMessageHotelNotSelected": "Please select a property to send message.",
    "_HintMessageHotelNotSelected.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintMessageSend": "Click the 'Send' button to send message.",
    "_HintMessageSend.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintMessageTitle": "Please type message title here",
    "_HintMessageTitle.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintOrdersCheck": "Please complete check-out for your orders.",
    "_HintOrdersCheck.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintProfileChangesSave": "Click the 'Save' button to save profile changes.",
    "_HintProfileChangesSave.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintRequest": "Click the 'Request' button to submit request.",
    "_HintRequest.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintSaveCompanion": "Complete information and click the 'Save' button to save companion.",
    "_HintSaveCompanion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintSaveCreditCard": "Click the 'Save' button to save a payment card.",
    "_HintSaveCreditCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintSignInUsingEmail": "You can also sign in with your email address",
    "_HintSignInUsingEmail.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintSubjectRequired": "Please specify subject.",
    "_HintSubjectRequired.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HintTextRequired": "Please specify text.",
    "_HintTextRequired.meta": {
      "Scopes": [ "Navigator" ]
    },
    "History": "History",
    "_History.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Home": "Home",
    "_Home.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "HomeButtonWarning": "Clear your info? This will take you back to the home screen to start over.",
    "_HomeButtonWarning.meta": {
      "Scopes": [ "Operator" ]
    },
    "HontEnterHotelName": "Please provide property name.",
    "_HontEnterHotelName.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Hotel": "Hotel",
    "_Hotel.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HotelFullErrorMessage": "We're very sorry, the highlighted categories are not available for selected dates. Please select another category to proceed with your booking.",
    "_HotelFullErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "HotelHasNoGateway": "Unfortunately, this property does not support online payments. An employee of the property will approach you for settlement upon your arrival.",
    "_HotelHasNoGateway.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HotelLocationCity": "Property location (City)",
    "_HotelLocationCity.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HotelLocationCountry": "Property location (Country)",
    "_HotelLocationCountry.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HotelName": "Property name",
    "_HotelName.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HotelNotListedQuestion": "Can't find your property listed?",
    "_HotelNotListedQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HotelPlural": "Hotels",
    "_HotelPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "HotelServices": "Property services",
    "_HotelServices.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HotelTermsAndConditions": "Property T&C",
    "_HotelTermsAndConditions.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Hour": "Hour",
    "_Hour.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HoursAgoTemplate": "{number} hours ago",
    "_HoursAgoTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "HowCanWeHelpPrompt": "Hello! How can we help you?",
    "_HowCanWeHelpPrompt.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "HowManyKeysPrompt": "How many keys do you need?",
    "_HowManyKeysPrompt.meta": {
      "Scopes": [ "Operator" ]
    },
    "IAgreeTo": "I agree to",
    "_IAgreeTo.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "IAmHere": "I'm here",
    "_IAmHere.meta": {
      "Scopes": [ "Operator" ]
    },
    "IAmMember": "I am a member of this reservation",
    "_IAmMember.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Id": "Identifier",
    "_Id.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IdentityCard": "Identity card",
    "_IdentityCard.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "IdentityDocument": "Identity document",
    "_IdentityDocument.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "IdentityDocumentDuplicityErrorMessage": "Duplicate document already exists.",
    "_IdentityDocumentDuplicityErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IdentityDocumentInvalidErrorMessage": "Sorry, we cannot accept this document.",
    "_IdentityDocumentInvalidErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "IdentityDocumentNew": "New identity document",
    "_IdentityDocumentNew.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IdentityDocumentPlural": "Identity documents",
    "_IdentityDocumentPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IdentityDocumentStorageDescription": "Safely store your documents now for a faster check-in later.",
    "_IdentityDocumentStorageDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IdentityDocumentTypeVisa": "Travel Visa",
    "_IdentityDocumentTypeVisa.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IHaveAccount": "I already have account",
    "_IHaveAccount.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IHaveMyKey": "I have my key",
    "_IHaveMyKey.meta": {
      "Scopes": [ "Operator" ]
    },
    "IHaveMyKeys": "I have my keys",
    "_IHaveMyKeys.meta": {
      "Scopes": [ "Operator" ]
    },
    "Includes": "Includes",
    "_Includes.meta": {
      "Scopes": [ "Distributor" ]
    },
    "IncludesTaxesAndFees": "Includes taxes and fees",
    "_IncludesTaxesAndFees.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IncludeWholeCode": "Please include the whole code",
    "_IncludeWholeCode.meta": {
      "Scopes": [ "Operator" ]
    },
    "InfoWillBeDiscarded": "Provided information will be discarded.",
    "_InfoWillBeDiscarded.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InProcess": "In process",
    "_InProcess.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InvalidCCNumber": "Invalid credit card number.",
    "_InvalidCCNumber.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InvalidEmailErrorMessage": "Invalid email.",
    "_InvalidEmailErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InvalidEntry": "Invalid entry",
    "_InvalidEntry.meta": {
      "Scopes": [ "Operator" ]
    },
    "InvalidLastNameErrorMessage": "Invalid last name.",
    "_InvalidLastNameErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "InvalidNameErrorMessage": "Invalid name.",
    "_InvalidNameErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InvalidServerResponse": "Invalid server response.",
    "_InvalidServerResponse.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InvalidValueErrorMessage": "Invalid value.",
    "_InvalidValueErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InvitationMail": "<p>Dear {titlePrefix} {name},</p><p>We are excited to welcome you to {enterpriseName} on <strong>{arrivalDate}</strong>!</p><p>Please check in online using the link to Mews Navigator below. Here, you can complete all legally required details so that you can speed up your check-in and relax once you arrive.</p><p>{signInLink}</p><p>You can use the following QR code to find your reservation once you arrive.</p>{qrCode}  <h3 style='text-align: center'>Need anything? </h3> {chatLink} <p>Wishing you safe and pleasant travels. See you shortly!</p><p>Kind regards,<br/>{enterpriseName}</p> {addToAppleWalletLink}",
    "_InvitationMail.meta": {
      "Scopes": [ "Mail" ]
    },
    "InvitationMailSubject": "Invitation to online check-in from {enterpriseName}",
    "_InvitationMailSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "InviteCompanions": "Who will be staying with us?",
    "_InviteCompanions.meta": {
      "Scopes": [ "Navigator" ]
    },
    "InviteCompanionsDescription": "Please help us by completing contact details for your travel companions listed below.",
    "_InviteCompanionsDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IsRoomOKQuestion": "We hope you've settled in nicely. Is everything OK with your room?",
    "_IsRoomOKQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IssueDate": "Issue date",
    "_IssueDate.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator", "Billing" ]
    },
    "Issuer": "Issuer",
    "_Issuer.meta": {
      "Scopes": [ "Billing" ]
    },
    "IssuingCity": "Issuing city",
    "_IssuingCity.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "IssuingCountry": "Issuing country",
    "_IssuingCountry.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Items": "Items",
    "_Items.meta": {
      "Scopes": [ "Navigator" ]
    },
    "IUnderstand": "I understand",
    "_IUnderstand.meta": {
      "Scopes": [ "Distributor" ]
    },
    "IWillDoItLater": "I'll do it later",
    "_IWillDoItLater.meta": {
      "Scopes": [ "Operator" ]
    },
    "Join": "Join",
    "_Join.meta": {
      "Scopes": [ "Navigator" ]
    },
    "KeyCheckInTemplateOnline": "{enterpriseName} will send you an email about where to get your keys.",
    "_KeyCheckInTemplateOnline.meta": {
      "Scopes": [ "Navigator" ]
    },
    "KeyCutterAlternateErrorMessage": "There was a problem creating your key. Remove keycard and try again.",
    "_KeyCutterAlternateErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "KeyCutterErrorMessage": "Key creation failed. Please try again.",
    "_KeyCutterErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "KeyCutterSuccessMessage": "Your key is ready to be used. Just remove it from the encoder.",
    "_KeyCutterSuccessMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "KeyCutterSuccessTitle": "Great!",
    "_KeyCutterSuccessTitle.meta": {
      "Scopes": [ "Operator" ]
    },
    "KeyCutterUpdatesErrorMessage": "Key encoder lost connection. Please contact reception or try again.",
    "_KeyCutterUpdatesErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "Language": "Language",
    "_Language.meta": {
      "Scopes": [ "Operator" ]
    },
    "LastName": "Last name",
    "_LastName.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "LastNameIdCard": "Last name (no dashes or spaces)",
    "_LastNameIdCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Less": "Less",
    "_Less.meta": {
      "Scopes": [ "Distributor" ]
    },
    "LetsStart": "Let's start",
    "_LetsStart.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "LetsTalk": "Let's talk",
    "_LetsTalk.meta": {
      "Scopes": [ "Navigator" ]
    },
    "LetUsKnowAboutQuestion": "Have a question about your reservation? Let us know",
    "_LetUsKnowAboutQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Loading": "Loading",
    "_Loading.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "LoadingAvailability": "Loading availability",
    "_LoadingAvailability.meta": {
      "Scopes": [ "Distributor" ]
    },
    "LoadingBookingEngine": "Loading booking engine",
    "_LoadingBookingEngine.meta": {
      "Scopes": [ "Distributor" ]
    },
    "LoadingGuidesProgress": "Loading guides",
    "_LoadingGuidesProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "LoadingReservationDescription": "Loading reservations",
    "_LoadingReservationDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "LocalTimeTemplate": "It is {time} in local time.",
    "_LocalTimeTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "LocalTimeWithZoneTemplate": "It is {time} in {zone}.",
    "_LocalTimeWithZoneTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Location": "Location",
    "_Location.meta": {
      "Scopes": [ "Distributor" ]
    },
    "LocationsWithoutAvailability": "Locations without availability",
    "_LocationsWithoutAvailability.meta": {
      "Scopes": [ "Distributor" ]
    },
    "LockedGuide": "Locked",
    "_LockedGuide.meta": {
      "Scopes": [ "Navigator" ]
    },
    "LoseAllEnteredDetails": "You can lose all of entered details",
    "_LoseAllEnteredDetails.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MachineReadableZone": "Machine-readable zone",
    "_MachineReadableZone.meta": {
      "Scopes": [ "Operator" ]
    },
    "MailAfterEndReservationBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                We'd like to sincerely thank you for staying with us at {enterpriseName}.            </p>            <p>                To help us improve our services in the future, we'd love to hear about your stay.            </p>            <p>                Please also share your experience with your friends and others on social media.            </p>            <p>                Feel free to include all your thoughts plus any feedback that will help us get better.                As always, if you ever find yourself back in town, please come see us again.            </p>            {shareExperienceHtml}            <p>                Kind regards,<br/>                {enterpriseName}            </p>",
    "_MailAfterEndReservationBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailAfterEndReservationSubject": "{enterpriseName} - We'd love some feedback about your stay!",
    "_MailAfterEndReservationSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailBillBody": "<p>Dear {titlePrefix} {name},</p><p>We've attached a copy of your bill from {enterpriseName}. Please contact us at {enterpriseEmail} if you have any questions or concerns regarding your bill.</p><p>Kind regards,<br/>{enterpriseName}</p>",
    "_MailBillBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailBillSubject": "{bill} from {enterpriseName}",
    "_MailBillSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailBookerReservationNewBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                Thank you for booking with {enterpriseName}!                You can find a summary of the reservation details below:            </p>            {detailsHtml}            <p>                                If you have any questions or need to change any details, please contact us at <strong>{enterpriseEmail}</strong>.            </p>            <p>                Kind regards,<br/>                {enterpriseName}            </p>",
    "_MailBookerReservationNewBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailBookerReservationNewSubject": "Your reservation at {enterpriseName}",
    "_MailBookerReservationNewSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerConfigurationErrorBody": "<pre>Please review the below error(s) carefully to prevent this from happening in the future: </pre><pre>{incidents}</pre><p><strong>{operationMessage}</strong></p><ul><li>If this error occurred during connection setup, either the Mews entities are mapped incorrectly or the connection with the {channelManagerClient} is still disabled on their side. In this case check the mapping or inform {channelManagerClient} that the connection is ready on Mews side.</li><li>Otherwise something was changed in the extranet of {channelManagerClient}, but the change has not been mirrored in Mews yet. Then the Mews mapping must be fixed to correspond with the set up in {channelManagerClient}.</li></ul>",
    "_MailChannelManagerConfigurationErrorBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerConfigurationErrorDisabledOperations": "The operation(s) '{operations}' of the {channelManagerClient} connection have been switched off. It can be enabled once the whole situation is resolved.",
    "_MailChannelManagerConfigurationErrorDisabledOperations.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerConfigurationErrorFailedOperations": "The operation(s) '{operations}' of the {channelManagerClient} connection are failing.",
    "_MailChannelManagerConfigurationErrorFailedOperations.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerConfigurationErrorSubject": "CONFIGURATION ERROR in {errorOrigin} connection: {result}",
    "_MailChannelManagerConfigurationErrorSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerCreationCompanyAndTravelAgencyDisabledWarningExplanation": "MEWS could not find any travel agency with {code} or the name {primaryTravelAgency}. This is because a new travel agency was sent from the channel manager and wasn't mapped in Mews. In your integration settings, if you select the Create company and travel agency profiles option, any unmapped profiles will automatically be created in Mews.",
    "_MailChannelManagerCreationCompanyAndTravelAgencyDisabledWarningExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerCreationCompanyAndTravelAgencyExplanation": "MEWS could not find any travel agency with {code} or the name {primaryTravelAgency}. This is because a new travel agency was sent from the channel manager and wasn't mapped in Mews.",
    "_MailChannelManagerCreationCompanyAndTravelAgencyExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerInventoryPushResultSubject": "[{result}] [{channelManagerClient}] Inventory update finished with {resultState}",
    "_MailChannelManagerInventoryPushResultSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerNewContractTravelAgencySubject": "New contract for travel agency {primaryTravelAgency} was created.",
    "_MailChannelManagerNewContractTravelAgencySubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerNewTravelAgencySubject": "New travel agency {primaryTravelAgency} come from {channelManagerClient}",
    "_MailChannelManagerNewTravelAgencySubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerNotificationGroupNotProcessed": "<p>{explanation}</p><p>The reservation group <strong>{groupCode}</strong> can't be properly downloaded and processed. Please double check this booking in {channelManagerClient} carefully and make any changes directly in MEWS if required.</p>",
    "_MailChannelManagerNotificationGroupNotProcessed.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerNotificationGroupProcessedWithWarnings": "<p>{explanation}</p><p>Specifically, please review group <strong>{groupCode}</strong>  in the MEWS Commander and check that information corresponds with {channelManagerClient}'s back-office.</p>",
    "_MailChannelManagerNotificationGroupProcessedWithWarnings.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerNotificationSubject": "Reservation group {groupCode} in {integration}: {result}",
    "_MailChannelManagerNotificationSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerOperationSummaryBody": "<p>Requested push for {pushInterval} created at {created} ended with {result}.</p>",
    "_MailChannelManagerOperationSummaryBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerOperationSummarySubject": "{integration} Push operation ended with {result}",
    "_MailChannelManagerOperationSummarySubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerPrimaryTravelAgencyCodeExplanation": "mapping code {channelManagerId}",
    "_MailChannelManagerPrimaryTravelAgencyCodeExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerPrimaryTravelAgencyExplanation": "IATA {iata}",
    "_MailChannelManagerPrimaryTravelAgencyExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerReportMissingDetailsBody": "<p>The following received reservations were not properly created.</p><p>This happens for channel manager reservations that were created before your {channelManagerClient} account was connected with Mews.</p><p>Kindly review the following reservations:</p><p><ul>{items}</ul></p>",
    "_MailChannelManagerReportMissingDetailsBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerReportMissingDetailsGroup": "<li><p>id: {channelManagerGroupCode}, customer: {firstName} {lastName}</p></li>",
    "_MailChannelManagerReportMissingDetailsGroup.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerReportMissingDetailsSubject": "Processing reservations from {channelManagerClient} finished with warnings.",
    "_MailChannelManagerReportMissingDetailsSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerSendEmailBody": "<p>Dear {user},</p>{message}<p>If you need any further assistance, please contact us at {email}.</p><p>Kind regards,<br>The MEWS support team</p>",
    "_MailChannelManagerSendEmailBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerSendInventoryPushResultBody": "<p>The following incidents in {enterpriseName} ({integration}) must be addressed as soon as possible.</p><table style=\"width: 100%; color: inherit; font: inherit; border-spacing: 5px;\"><tr><td><table style=\"width: 100%; color: inherit; font: inherit\"><tr><th style=\"width: 150px; text-align: left; vertical-align: top;\">Enterprise {enterpriseName}</th><td>Code {integrationChannelManagerId}<br/></td><td>Message type {messageType}<br/></td><td>Related token {relatedToken}<br/></td><td>Original message {unwrappedMessage}<br/></td><td>Errors {errors}<br/></td><td>Warnings {warnings}<br/></td></tr></table></td></tr></table>",
    "_MailChannelManagerSendInventoryPushResultBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerUnknownProductExplanation": "MEWS could not find any product with mapping code {productCodes} via the {channelManagerClient} connection. Most likely the same product has a different code for every connected OTA and have to be mapped individually in Mews.<br /><br />Kindly contact support@mewssystems.com in order to correct this setting. Specifically review group {channelManagerGroupCode} in the Mews Commander and check that its information corresponds with {channelManagerClient}' back-office.",
    "_MailChannelManagerUnknownProductExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerUnknownProductSubject": "Reservation received with unknown product code {productCodes}.",
    "_MailChannelManagerUnknownProductSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerUnknownRateExplanation": "MEWS could not find any rate with mapping code {rateCodes} via the {channelManagerClient} connection. Most likely there was a new rate added in {channelManagerClient}, which was not mapped in Mews.<br /><br /> Specifically review group {channelManagerGroupCode} in the Mews Commander and check that its information corresponds with {channelManagerClient}' back-office.<br /><br /> If there is any problem with the group, do not hesitate to contact support@mewssystems.com.",
    "_MailChannelManagerUnknownRateExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerUnknownRateSubject": "Reservation received with unknown rate code {rateCodes}. The default rate was assigned instead.",
    "_MailChannelManagerUnknownRateSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerUnknownSpaceCategoryGroupProcessedWithWarningsExplanation": "Mews couldn't find any category with mapping code {categoryCode} for {channelManagerClient} connection. This is likely because a new category was added in {channelManagerClient} and wasn't mapped in Mews. Please contact us to help to correct this setting. The reservation with code {reservationCode} was assigned to another suitable category.  Please review the reservation and reassign to the appropriate category.",
    "_MailChannelManagerUnknownSpaceCategoryGroupProcessedWithWarningsExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerUnknownSpaceCategoryNotProcessedExplanation": "Mews couldn't find any category with mapping code {categoryCode} for {channelManagerClient} connection. This is likely because a new category was added in {channelManagerClient} and wasn't mapped in Mews. Please contact us to help to correct this setting.",
    "_MailChannelManagerUnknownSpaceCategoryNotProcessedExplanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChannelManagerUnknownSpaceCategorySubject": "Reservation comes with unknown category code {categoryCode}.",
    "_MailChannelManagerUnknownSpaceCategorySubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargebackCreatedHeader": "A customer has disputed a charge.",
    "_MailChargebackCreatedHeader.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargebackCreatedIntro": "If you think there's been a mistake, don't worry—a chargeback isn't a final refund, and there's always a chance to reverse it. We highly recommend that you approach the cardholder and <strong>try to resolve the problem outside of the dispute system</strong>. But if you can't, we're here to help.",
    "_MailChargebackCreatedIntro.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargebackCreatedPostScriptum": "<strong>P.S.</strong> Learn more about <a href=\"{disputeHelpLink}\" target=\"_blank\">disputes</a> and <a href=\"{disputePreventionHelpLink}\" target=\"_blank\">how to prevent them</a>.",
    "_MailChargebackCreatedPostScriptum.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargebackCreatedRegards": "Kind regards,<br>The Mews team",
    "_MailChargebackCreatedRegards.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargebackCreatedWhatIsNext": "Reply to this email within 48 hours and include <a href=\"{evidenceHelpLink}\" target=\"_blank\">all of the evidence you need to effectively respond to a chargeback</a>. We'll submit it on your behalf and do our best to defend you, but <strong>the customer's bank makes the final decision</strong>.",
    "_MailChargebackCreatedWhatIsNext.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargebackCreatedWhatIsNextHeading": "What's next?",
    "_MailChargebackCreatedWhatIsNextHeading.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargeFailBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                We look forward to welcoming you at {enterpriseName} on {arrivalDate}!            </p>            <p>                Unfortunately, as we tried to process your {action}, the transaction was declined by your bank.                Please click on the link below to submit alternate payment card details while completing your online check-in process.            </p>            <p>                 {signInLink}             </p>            <p>                 Kind regards,<br/>                {enterpriseName}            </p>",
    "_MailChargeFailBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailChargeFailSubject": "Your upcoming visit to {enterpriseName} on {arrivalDate}",
    "_MailChargeFailSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCheckOutInvitationBody": "<h2>Check out online</h2> <p>Your stay's coming to an end. Let's make it stress-free.</p> <p>Check-out time is {checkOutTime}. Online check-out is a quick and easy alternative, leaving you more time for the things that matter.</p>",
    "_MailCheckOutInvitationBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCheckOutInvitationFooter": "<p>{checkOutLink}</p>",
    "_MailCheckOutInvitationFooter.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCheckOutInvitationHeadline": "Check out online",
    "_MailCheckOutInvitationHeadline.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCheckOutInvitationParagraph": "Your time is important. Let's save some. Online check-out is quick and easy. Just choose the time you'd like to go.",
    "_MailCheckOutInvitationParagraph.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCheckOutInvitationSubject": "Check out online with {enterpriseName}",
    "_MailCheckOutInvitationSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCustomerFailedPaymentSubject": "Customer's payment failed",
    "_MailCustomerFailedPaymentSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCustomerNewBody": "<h2>Make the most of your stay.</h2><p>At <strong>{enterpriseName}</strong>, we're dedicated to your leisure. We know that there's nothing worse than filling out paperwork when you'd rather be relaxing, so we're here to make sure you start your stay out right.</p><p> Add your personal info, let us know who's sleeping where, and fill in travel document details now, so you won't have to when you arrive.</p>",
    "_MailCustomerNewBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCustomerNewHeadline": "Make the most of your stay.",
    "_MailCustomerNewHeadline.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCustomerNewParagraph": "At {enterpriseName}, we're dedicated to your leisure. We know that there's nothing worse than filling out paperwork when you'd rather be relaxing, so we're here to make sure you start your stay out right. Add your personal info, let us know who's sleeping where, and fill in travel document details now, so you won't have to when you arrive.",
    "_MailCustomerNewParagraph.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCustomerNewSecurityNote": "<p>{verificationLink}</p><h3>Take control of your data.</h3><p>We use Mews Navigator to ensure your data is stored securely.<br>Don't worry, though-you're in control of all the information you share with us.</p><p>Learn more about the <a href=\"{privacyPolicyUrl}\" target=\"_blank\" rel=\"noopener\">Mews privacy policy</a>.</p>",
    "_MailCustomerNewSecurityNote.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailCustomerNewSubject": "When you stay at {enterpriseName}...",
    "_MailCustomerNewSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailExportBody": "<p>                Dear Mewser,            </p>            <p>                The export of <strong>{reportName}</strong> has just finished processing.                You can download the completed report data from the Mews export center.            </p>            {attachmentNote}            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailExportBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailFailedPaymentAuthorizationBody": "<p>Hi <strong>{customerName},</strong></p><p>Your payment to <strong>{enterpriseName}</strong> failed because it wasn't verified by your bank. We'll send you another email soon, so you can retry your payment.</p>",
    "_MailFailedPaymentAuthorizationBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailFailedPaymentAuthorizationSubject": "Oh no, your payment failed",
    "_MailFailedPaymentAuthorizationSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailFailedPaymentFailedVerification": "The payment failed because it wasn't verified by the customer's bank (as required by 3DS).",
    "_MailFailedPaymentFailedVerification.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailGatewayChargeFailBody": "<p>                Dear {enterpriseName},            </p>            <p>                Unfortunately, although payment status appears successful in Mews, our payment gateway recently informed us that the following transaction failed to process.            </p>            {detailsHtml}            <p>                                Since this failed payment has already been reported, please approach the customer to collect another payment as soon as possible.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailGatewayChargeFailBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailGatewayChargeFailSubject": "Failed gateway payment {token} - the payment has already been reported",
    "_MailGatewayChargeFailSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailGatewayPaymentReceiptBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                The following transaction was made at {enterpriseName}.                {merchantNote}            </p>            <p>                You can find a receipt below:            </p>            {detailsHtml}            <p>                You may also request a copy of the official bill at the property. Thank you for your order.            </p>            <p>                Kind Regards,<br />                {enterpriseName}            </p>",
    "_MailGatewayPaymentReceiptBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailGatewayPaymentReceiptSubject": "Your receipt from {enterpriseName}",
    "_MailGatewayPaymentReceiptSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailGatewayPaymentRefundReceiptBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                The following transaction was made at {enterpriseName}.                {merchantNote}            </p>            <p>                You can find a receipt below:            </p>            {detailsHtml}            <p>                You may also request a copy of the official bill at the property.            </p>            <p>                Kind Regards,<br />                {enterpriseName}            </p>",
    "_MailGatewayPaymentRefundReceiptBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailIntegrationAccessTokenBody": "<p>                Dear {clientCompany},            </p>            <p>                {enterpriseName} has granted you access to connect {integrationName} to Mews. You can find your connection details for this property below:<br/>            </p>            {detailsHtml}            <p>                Please contact {supportEmail} if you have any questions or if you would like to update the email address to which these tokens are sent.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailIntegrationAccessTokenBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailIntegrationAccessTokenSubject": "{enterpriseName} would like to connect {integrationName} to Mews!",
    "_MailIntegrationAccessTokenSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailIntegrationClientNewBody": "<p>                Dear {name},            </p>            <p>                Welcome to the Mews partner community! We are thrilled to have you with us.                You can find your connection details below:            </p>            {detailsHtml}            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailIntegrationClientNewBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailMagicLinkBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                As per your request, you will find your Magic Link below. Click on this link to sign in to your Mews Navigator account.            </p>            <p>                {magicLink}            </p>            <p>                Please note that this Magic Link is valid for 24 hours and can be used only one time. If you have any trouble, please don't hesitate to contact us.            </p>            <p>                Kind regards,<br />                The Mews Team            </p>",
    "_MailMagicLinkBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailMagicLinkDescription": "Click below to have a Magic Link sent to your email address. Use this link to sign in to your profile without entering your password.",
    "_MailMagicLinkDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MailMagicLinkMessage": "Check your email for a Magic Link you can use to sign in.",
    "_MailMagicLinkMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MailMagicLinkSubject": "Magic link",
    "_MailMagicLinkSubject.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MailMessageReminderBody": "<strong>You've got {messageCount} unread message(s)</strong>{messageDetails}",
    "_MailMessageReminderBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailMessageReminderSubject": "You have {messageCount} unread message(s)",
    "_MailMessageReminderSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPasswordResetBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                As per your request, you can reset your account password by clicking on the link below. If you no longer wish to reset your password, you can disregard this e-mail.            </p>            <p>                {setPasswordLink}            </p>            <p>                If you did not request a password reset, please contact your account administrator immediately.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailPasswordResetBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPaymentAuthorizationBody": "<p>Hi <strong>{customerName},</strong></p><p>We can't process your payment for {enterpriseName} until it has been verified. Unfortunately, <strong>if it's not verified in 24 hours, your order could be canceled.</strong></p><p>Best regards,<br><br/><strong>{enterpriseName}</strong></p>",
    "_MailPaymentAuthorizationBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPaymentAuthorizationSubject": "Verify your payment at {enterpriseName}",
    "_MailPaymentAuthorizationSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPaymentRequestAddedSubject": "Pending payment at {enterpriseName}",
    "_MailPaymentRequestAddedSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPendingPayment": "You've got a pending payment at",
    "_MailPendingPayment.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPreauthorizationSuccessBody": "<p> Dear {titlePrefix} {name}, </p> <p> The following preauthorization transaction was made at {enterpriseName}. {merchantNote} </p> <p> Please note that the above transaction is not an actual charge, but just a temporary holding of the funds. </p> <p> {detailsHtml} </p> <p> Kind regards,<br/> {enterpriseName} </p>",
    "_MailPreauthorizationSuccessBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPreauthorizationSuccessSubject": "{enterpriseName} created a preauthorization transaction",
    "_MailPreauthorizationSuccessSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailPurchasedIntegrationAccessTokenSubject": "{enterpriseName} has purchased {integrationName} via the Mews Marketplace!",
    "_MailPurchasedIntegrationAccessTokenSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailQuotationBody": "<p><strong>Thanks!</strong></p><p> We'll hold your reservation until <strong>{released}</strong>. If you haven't confirmed it by that time, it will be automatically canceled. </p><p>{signInLink}</p><p>{detailsHtml}</p><h3>Need anything?</h3> <p>{chatLink}</p><p>Kind regards,<br/>{enterpriseName}</p>",
    "_MailQuotationBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailQuotationSubject": "Your reservation at {enterpriseName}",
    "_MailQuotationSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReleaseReminderBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                We're holding your reservation here at {enterpriseName}, but your arrival date is coming up soon and we're still waiting for your confirmation.            </p>            <p>                Please confirm before <strong>{released}</strong>, or your reservation will be canceled automatically.                Once canceled, we can't get it back for you.             </p>            <p>                Your reservation summary is below:            </p>            {detailsHtml}            <p>Click below to confirm or cancel online. You can also contact us directly if something doesn't look right.</p>            <p>                {signInLink}            </p>            <p>                Thanks and hope to see you soon!            </p>            <p>                Kind regards,<br/>                {enterpriseName}            </p>",
    "_MailReleaseReminderBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReleaseReminderSubject": "Your reservation at {enterpriseName}",
    "_MailReleaseReminderSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailRequestCustomerDataBody": "<p>                Dear {chainName},            </p> <br/> <p>               We are writing to inform you of a personal data access request on behalf of {name}. Please note that {name} has been copied on this email and should be kept informed of the request process.             </p> <br/> <p>            Please compile any personal information regarding {name} from your systems and provide {name} with that information. Check your jurisdiction’s legal requirements regarding data access, ensure that you are legally allowed to provide this data, and that, by doing so, you comply with all relevant legal obligations. Please be aware that, depending on your jurisdiction, there may be a legally prescribed time period in which you are obliged to carry out this personal data access request.            </p> <br/> <p>Kind regards,<br/>The Mews Team</p>",
    "_MailRequestCustomerDataBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailRequestCustomerDataSubject": "{name} - Request for data",
    "_MailRequestCustomerDataSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailRequestCustomerDeletionBody": "<p>                Dear {chainName},            </p> <br/> <p>               We are writing to inform you of a personal data deletion request on behalf of {name}. Please note that {name} has been copied on this email and should be kept informed of the deletion process.             </p> <br/> <p>                Please verify, according to your jurisdiction, what personal data you are obliged to remove from your systems regarding {name}. Please be aware that, despite this request, you may be allowed, or even obliged, to keep some of the personal data. Additionally, depending on your jurisdiction, there may be a legally prescribed time period in which you are obliged to carry out this personal data deletion request.            </p> <br/> <p>Related reservations: <br/>{detailsHtml}</p> <br/> <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailRequestCustomerDeletionBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailRequestCustomerDeletionSubject": "{name} - Request for account deletion",
    "_MailRequestCustomerDeletionSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationAfterStartBody": "<h2><p>Welcome to {enterpriseName}</h2><p> We're so happy you're here. For quick reference, you can find your check-out details below.</p>            </p>{detailsHtml}<h3> Need anything else?</h3> <p>{chatLink}</p></p><p>Kind regards,<br/>{enterpriseName}</p>",
    "_MailReservationAfterStartBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationAfterStartSubject": "Welcome to {enterpriseName}",
    "_MailReservationAfterStartSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationBeforeStartBody": "<h2>Make the most of your stay.</h2><p> At <strong>{enterpriseName}</strong>, we're dedicated to your leisure. We know that there's nothing worse than filling out paperwork when you'd rather be relaxing, so we're here to make sure you start your stay out right.</p> <p> Add your personal info, choose who's sleeping where, and fill in travel document details now, so you won't have to when you arrive.</p> <p>{signInLink}</p> <h3>Need anything?</h3> <p>{chatLink}</p><p>Kind regards,<br/>{enterpriseName}</p> {addToAppleWalletLink}",
    "_MailReservationBeforeStartBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationBeforeStartSubject": "Check in for your stay at {enterpriseName}",
    "_MailReservationBeforeStartSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationCancelBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                Your reservation at {enterpriseName} has been successfully canceled.                You can find a summary of the canceled order below:            </p>            {detailsHtml}            <p>                Wishing you a great day and we hope to welcome you on another occasion.            </p>            <p>                Kind regards,<br/>                {enterpriseName}            </p>",
    "_MailReservationCancelBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationCancellationBody": "<p>                Dear Mewser,            </p>            <p>                We are writing to inform you that the following reservations were automatically canceled:             </p>            {detailsHtml}            <p>                If you have any questions, please do not hesitate to contact us.             </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailReservationCancellationBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationCancelSubject": "Your reservation at {enterpriseName} - Cancellation confirmation",
    "_MailReservationCancelSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationNewBody": "<h2>Your reservation is confirmed!</h2> <p>Thanks for booking your stay at <strong>{enterpriseName}</strong>. We hope you're just as excited as we are.</p><p>Start getting ready now. Don't put away your travel documents just yet! When you stay with us, we need a little bit of info from you (sorry — it's the law).</p><p><strong>Add your info now, so you won't have to when you arrive.</strong></p> <p>{signInLink}</p> <br><br><hr/> <p><strong>Reservation details</strong></p> <p>{detailsHtml}</p> <p><strong>Need anything?</strong></p> <p>{chatLink}</p><br><br> <p><strong>Check-in is just a scan away</strong></p>Scan this QR code when you arrive for a faster check-in <p>{qrCode}</p><p>Kind regards,<br/>{enterpriseName}</p> {addToAppleWalletLink}",
    "_MailReservationNewBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailReservationNewSubject": "Your {enterpriseName} confirmation",
    "_MailReservationNewSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailServiceOrderNewBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                New orders have been placed for a service that you are responsible for. Please see all order details below:            </p>            {detailsHtml}            <p>                Should these details require any editing, you can find all the above orders within Mews Commander.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailServiceOrderNewBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailSettlementFailBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                We look forward to welcoming you at {enterpriseName} on {arrivalDate}!            </p>            <p>                Unfortunately, as we tried to update your customer details, we noticed that you do not have a payment card attached to your reservation.                 Please click on the link below to submit your card details while completing your online check-in process.            </p>            <p>                 {signInLink}             </p>            <p>                 Kind regards,<br/>                {enterpriseName}            </p>",
    "_MailSettlementFailBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailSettlementFailSubject": "Your upcoming visit to {enterpriseName} on {arrivalDate}",
    "_MailSettlementFailSubject.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailUpdateAuthenticatorBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                Our records indicate that you have recently changed your two-factor authentication settings for your Mews account.            </p>            <p>                If you would like to edit your two-factor authentication preferences again, you can do so in your user profile settings at any time.            </p>            <p>                If you did not make any changes, please contact your account administrator immediately.            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailUpdateAuthenticatorBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "MailUserNewBody": "<p>                Dear {titlePrefix} {name},            </p>            <p>                Welcome aboard Mewser! With this new account, you're now a part of the Mews network. Please use the link below to verify your e-mail address and finish setting up your account details.                 We hope you enjoy your Mews experience!            </p>            <p>                {verificationLink}            </p>            <p>                Kind regards,<br/>                The Mews Team            </p>",
    "_MailUserNewBody.meta": {
      "Scopes": [ "Mail" ]
    },
    "Manage": "Manage",
    "_Manage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Map": "Map",
    "_Map.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MaximalReservationLengthExceededErrorMessage": "Selected date range exceeds maximum reservation length. Please select smaller range and try again.",
    "_MaximalReservationLengthExceededErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "MaximumNumberOfKeys": "Maximum number of keys",
    "_MaximumNumberOfKeys.meta": {
      "Scopes": [ "Operator" ]
    },
    "MaxPersons": "Maximum persons",
    "_MaxPersons.meta": {
      "Scopes": [ "Distributor" ]
    },
    "MerchantTermsAndConditions": "Merchant T&C",
    "_MerchantTermsAndConditions.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Message": "Message",
    "_Message.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessageCountOne": "1 message",
    "_MessageCountOne.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessageCountTemplate": "{count} messages",
    "_MessageCountTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessageNew": "New message",
    "_MessageNew.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessageNotificationEmails": "Send me an email notification in case of unread reply from a property.",
    "_MessageNotificationEmails.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessagePlural": "Messages",
    "_MessagePlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessageSend": "Send",
    "_MessageSend.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessageSendFailedErrorMessage": "Sending failed. Retry.",
    "_MessageSendFailedErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MessagingNotSupportedByHotel": "We're very sorry, this property does not support messaging.",
    "_MessagingNotSupportedByHotel.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MewsDataSecurity": "Mews data security",
    "_MewsDataSecurity.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MewsMerchantVia": "Mews Merchant via",
    "_MewsMerchantVia.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MewsPaymentNotice": "Property may use this card for any charges or preauthorizations related to your upcoming stay. Payment will be taken via the Mews Merchant.",
    "_MewsPaymentNotice.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MewsPrivacyPolicy": "Mews Privacy Policy",
    "_MewsPrivacyPolicy.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "MewsTermsAndConditions": "Mews T&C",
    "_MewsTermsAndConditions.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Minute": "Minute",
    "_Minute.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MinutesAgoTemplate": "{number} minutes ago",
    "_MinutesAgoTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Miss": "Ms.",
    "_Miss.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Misses": "Mrs.",
    "_Misses.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Mister": "Mr.",
    "_Mister.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Month": "Month",
    "_Month.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthApril": "April",
    "_MonthApril.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthAugust": "August",
    "_MonthAugust.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthDecember": "December",
    "_MonthDecember.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthFebruary": "February",
    "_MonthFebruary.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthJanuary": "January",
    "_MonthJanuary.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthJuly": "July",
    "_MonthJuly.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthJune": "June",
    "_MonthJune.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthMarch": "March",
    "_MonthMarch.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthMay": "May",
    "_MonthMay.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthNovember": "November",
    "_MonthNovember.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthOctober": "October",
    "_MonthOctober.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "Months": "Months",
    "_Months.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthSeptember": "September",
    "_MonthSeptember.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MonthShortApril": "Apr",
    "_MonthShortApril.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortAugust": "Aug",
    "_MonthShortAugust.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortDecember": "Dec",
    "_MonthShortDecember.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortFebruary": "Feb",
    "_MonthShortFebruary.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortJanuary": "Jan",
    "_MonthShortJanuary.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortJuly": "Jul",
    "_MonthShortJuly.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortJune": "Jun",
    "_MonthShortJune.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortMarch": "Mar",
    "_MonthShortMarch.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortMay": "May",
    "_MonthShortMay.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortNovember": "Nov",
    "_MonthShortNovember.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortOctober": "Oct",
    "_MonthShortOctober.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MonthShortSeptember": "Sep",
    "_MonthShortSeptember.meta": {
      "Scopes": [ "Navigator" ]
    },
    "More": "More",
    "_More.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "MoreInfoForAuthorities": "Please complete all required fields to finish check-in.",
    "_MoreInfoForAuthorities.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MyDataSecurityMessage": "Why do you need my data?",
    "_MyDataSecurityMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MyReservationPlural": "My reservations",
    "_MyReservationPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "MyStays": "My stays",
    "_MyStays.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NameOnCard": "Name on card",
    "_NameOnCard.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Nationality": "Nationality",
    "_Nationality.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "NavigatorHintMaps": "Open this location in a map application or display it directly in Navigator.",
    "_NavigatorHintMaps.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NavigatorMessageDefaultRecipientTemplate": "To: {name} Reception",
    "_NavigatorMessageDefaultRecipientTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NavigatorSuggestionCompanionProfiles": "Help us update the profiles of your travel companions.",
    "_NavigatorSuggestionCompanionProfiles.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NavigatorSuggestionCreditCardAdd": "Please enter your details below to add a payment card to your account.",
    "_NavigatorSuggestionCreditCardAdd.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NavigatorSuggestionPersonalPreferences": "Select your personal preferences so we can help you find exactly what you need!",
    "_NavigatorSuggestionPersonalPreferences.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NavigatorSuggestionVerifyCreditCard": "Please verify the following payment card details.",
    "_NavigatorSuggestionVerifyCreditCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NavigatorVersionTemplate": "Navigator, Version {version} ({build})",
    "_NavigatorVersionTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NearMe": "Near me",
    "_NearMe.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NeedHelp": "Need help?",
    "_NeedHelp.meta": {
      "Scopes": [ "Mail" ]
    },
    "NewBooking": "New booking",
    "_NewBooking.meta": {
      "Scopes": [ "Distributor" ]
    },
    "NewMessage": "New message",
    "_NewMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NewPassword": "New password",
    "_NewPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NewPasswordCheck": "Confirm new password",
    "_NewPasswordCheck.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Next": "Next",
    "_Next.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "NextGuest": "Next guest",
    "_NextGuest.meta": {
      "Scopes": [ "Operator" ]
    },
    "NextStep": "Next step",
    "_NextStep.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Night": "Night",
    "_Night.meta": {
      "Scopes": [ "Distributor" ]
    },
    "NoAddressProvided": "No address provided",
    "_NoAddressProvided.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoAvailabilityMessage": "We're very sorry, there is no availability for the dates you selected.",
    "_NoAvailabilityMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "NoCancel": "No, cancel",
    "_NoCancel.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoCCWithThisCompanyYet": "Please add payment card for this company.",
    "_NoCCWithThisCompanyYet.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoCity": "Please select city",
    "_NoCity.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoCompanyProvided": "No company provided",
    "_NoCompanyProvided.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoCountrySelected": "Please select country",
    "_NoCountrySelected.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoEnterpriseSelected": "Please select enterprise.",
    "_NoEnterpriseSelected.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoHotelSelected": "Please select property.",
    "_NoHotelSelected.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoItems": "No items",
    "_NoItems.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoMatch": "No match",
    "_NoMatch.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoMessages": "No new messages",
    "_NoMessages.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoMessageThreads": "No message threads",
    "_NoMessageThreads.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoMoreAvailabilityMessage": "We're very sorry, there is no availability in this category.",
    "_NoMoreAvailabilityMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "NonEmptyBookingMessage": "Booking is already in progress.",
    "_NonEmptyBookingMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "NoNotifications": "No new notifications",
    "_NoNotifications.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoOrderableProductsInService": "Service contains no orderable products.",
    "_NoOrderableProductsInService.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoPaymentCardWithThisCompanyYet": "Please add payment card for this company.",
    "_NoPaymentCardWithThisCompanyYet.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoPendingPaymentsInfo": "You don't have any pending payments.",
    "_NoPendingPaymentsInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoPersonalDataShared": "Here you will see your personal data shared with the properties.",
    "_NoPersonalDataShared.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NorthernAmerica": "Northern America",
    "_NorthernAmerica.meta": {
      "Scopes": [ "Operator" ]
    },
    "NoServices": "No services available.",
    "_NoServices.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoServicesInHotel": "Property does not offer any services.",
    "_NoServicesInHotel.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoStayMessage": "No, stay",
    "_NoStayMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "NoSubject": "(no subject)",
    "_NoSubject.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NotePlural": "Notes",
    "_NotePlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Notes": "Notes",
    "_Notes.meta": {
      "Scopes": [ "Billing" ]
    },
    "NothingFound": "Nothing found",
    "_NothingFound.meta": {
      "Scopes": [ "Operator" ]
    },
    "NotificationPlural": "Notifications",
    "_NotificationPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NotProvided": "Not provided",
    "_NotProvided.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NotReadyForCheckIn": "Not ready for check-in",
    "_NotReadyForCheckIn.meta": {
      "Scopes": [ "Operator" ]
    },
    "NotWorkingApplicationHint": "Still not working? Contact {enterpriseName} to find a solution.",
    "_NotWorkingApplicationHint.meta": {
      "Scopes": [ "Navigator" ]
    },
    "NoUnpaidItemOnBillMessage": "You don't have any unpaid items on your bill.",
    "_NoUnpaidItemOnBillMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Now": "Now",
    "_Now.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Number": "Number",
    "_Number.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "NumberOfGuests": "Number of guests",
    "_NumberOfGuests.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "NumberOfPeople": "Number of people",
    "_NumberOfPeople.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "Occupancy": "Occupancy",
    "_Occupancy.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Occupation": "Occupation",
    "_Occupation.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Ok": "OK",
    "_Ok.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "OkGotIt": "OK, got it",
    "_OkGotIt.meta": {
      "Scopes": [ "Operator" ]
    },
    "OldPassword": "Old password",
    "_OldPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OneHourAgo": "1 hour ago",
    "_OneHourAgo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnePersonReservationWarning": "Reservation is for 1 person only.",
    "_OnePersonReservationWarning.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckIn": "Online check-in",
    "_OnlineCheckIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckInBookerDescription": "Did you book for yourself or someone else?",
    "_OnlineCheckInBookerDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckInCompanionsMessage": "If there are other travelers to invite, enter their details here so everyone can save time.",
    "_OnlineCheckInCompanionsMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckInLetStartOverview": "We'll start with your reservation overview below:",
    "_OnlineCheckInLetStartOverview.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckinSpeedUpMessage": "Help us speed up your check-in by completing these details so you can relax once you arrive!",
    "_OnlineCheckinSpeedUpMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckInSuccessMessage": "Online check-in successfully complete.",
    "_OnlineCheckInSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckInWelcomeMessage": "Complete your info now, so when you arrive at {enterpriseName}, your check-in will be quick and easy.",
    "_OnlineCheckInWelcomeMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckOut": "Online check-out",
    "_OnlineCheckOut.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OnlineCheckOutNotSupportedExtraItemsMessage": "Sorry, your bill needs to be finalized before check-out. Please go to reception to take care of your bill.",
    "_OnlineCheckOutNotSupportedExtraItemsMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OpenGooglePlay": "Open Google Play",
    "_OpenGooglePlay.meta": {
      "Scopes": [ "Operator" ]
    },
    "OpenInCommander": "Open in Commander",
    "_OpenInCommander.meta": {
      "Scopes": [ "Operator" ]
    },
    "OpenInMaps": "Open in maps",
    "_OpenInMaps.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Optional": "Optional",
    "_Optional.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "OptionalReservationConfirmation": "What would you like to do with your reservation?",
    "_OptionalReservationConfirmation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Or": "or",
    "_Or.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Order": "Order",
    "_Order.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OrderAddedToBasket": "Order successfully added to basket.",
    "_OrderAddedToBasket.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OrderHistoryLoading": "Loading order history",
    "_OrderHistoryLoading.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OrderNow": "Order now",
    "_OrderNow.meta": {
      "Scopes": [ "Navigator" ]
    },
    "OrderTotal": "Order total",
    "_OrderTotal.meta": {
      "Scopes": [ "Operator" ]
    },
    "OurRates": "Our rates",
    "_OurRates.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Paid": "Paid",
    "_Paid.meta": {
      "Scopes": [ "Billing" ]
    },
    "Passport": "Passport",
    "_Passport.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Password": "Password",
    "_Password.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "PasswordAgain": "Password again",
    "_PasswordAgain.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PasswordDoesNotMatch": "Passwords do not match. Please try again.",
    "_PasswordDoesNotMatch.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PasswordResetPrompt": "If you cannot remember password, click the reset password link and check your email for further instructions.",
    "_PasswordResetPrompt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PasswordShortErrorMessage": "Password must be 6 or more characters, including at least 1 number and 1 symbol.",
    "_PasswordShortErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PasswordSuccessfullyChanged": "Password successfully changed.",
    "_PasswordSuccessfullyChanged.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PasswordSuccessfullySet": "Password successfully set.",
    "_PasswordSuccessfullySet.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Past": "Past",
    "_Past.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Pay": "Pay",
    "_Pay.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PayBefore": "Pay before",
    "_PayBefore.meta": {
      "Scopes": [ "Mail" ]
    },
    "Payment": "Payment",
    "_Payment.meta": {
      "Scopes": [ "Distributor", "Billing" ]
    },
    "PaymentByMewsMerchant": "All payments on behalf of {enterpriseName} are processed by Mews Merchant. {legalName}, {address}.",
    "_PaymentByMewsMerchant.meta": {
      "Scopes": [ "Navigator", "Mail" ]
    },
    "PaymentCanceledInfo": "Payment was cancelled",
    "_PaymentCanceledInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCard": "Payment card",
    "_PaymentCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationFailureErrorMessage": "Sorry, your payment couldn't be verified.",
    "_PaymentCardAuthorizationFailureErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationFailureInfo": "If you were attempting to pay for a reservation, don’t worry—your reservation hasn’t been canceled.",
    "_PaymentCardAuthorizationFailureInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationFailureRetryMessage": "Please contact {enterpriseName} to try again with a different payment method.",
    "_PaymentCardAuthorizationFailureRetryMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationInfo": "{enterpriseName} can't process your payment until it's been verified.",
    "_PaymentCardAuthorizationInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationInvalidLinkErrorMessage": "This link is no longer valid.",
    "_PaymentCardAuthorizationInvalidLinkErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationInvalidLinkInfo": "Please contact {enterpriseName} to retry the payment, and we'll send you another link to complete the verification process.",
    "_PaymentCardAuthorizationInvalidLinkInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationPendingInfo": "You're all done here. We'll send an email as soon as your bank responds. (It shouldn't take more than 10 minutes.)",
    "_PaymentCardAuthorizationPendingInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationPendingMessage": "Your payment is being verified.",
    "_PaymentCardAuthorizationPendingMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationRegulationInfo": "Why does your payment need to be verified? Due to an EU regulation—known as <a href=\"https://stripe.com/en-se/guides/strong-customer-authentication\" target=\"_blank\">PSD2</a>—every online payment needs to be verified by your bank. Learn more about <a href=\"https://www.mewssystems.com/blog/psd2-guide-for-hoteliers\" target=\"_blank\">how this extra authentication protects people like you from fraud</a>.",
    "_PaymentCardAuthorizationRegulationInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationSuccessInfo": "Thanks for doing that for us—you're all set and you can close the window now.",
    "_PaymentCardAuthorizationSuccessInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationSuccessMessage": "Your payment was verified!",
    "_PaymentCardAuthorizationSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardAuthorizationTitle": "Verify your payment",
    "_PaymentCardAuthorizationTitle.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardCVV": "CVV",
    "_PaymentCardCVV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "PaymentCardExpiration": "Expiration",
    "_PaymentCardExpiration.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "PaymentCardIsAttachedToReservation": "Your payment card information has already been provided. Payment for your reservation will be charged using these details.",
    "_PaymentCardIsAttachedToReservation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentCardNumber": "Payment card number",
    "_PaymentCardNumber.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "PaymentCardVerificationErrorMessage": "There was a problem verifying your card",
    "_PaymentCardVerificationErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentFailed": "Payment failed",
    "_PaymentFailed.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentFailedDialogBody": "Unfortunately, we couldn't process your payment. Please try again.",
    "_PaymentFailedDialogBody.meta": {
      "Scopes": [ "Operator" ]
    },
    "PaymentFailedDialogTitle": "Payment failed",
    "_PaymentFailedDialogTitle.meta": {
      "Scopes": [ "Operator" ]
    },
    "PaymentInformation": "Payment information",
    "_PaymentInformation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentPastDue": "Payment past due",
    "_PaymentPastDue.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentPlural": "Payments",
    "_PaymentPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentRequested": "Payment requested",
    "_PaymentRequested.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentRequestReasonOther": "Other",
    "_PaymentRequestReasonOther.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentRequestReasonPaymentCardDeclined": "Payment card declined",
    "_PaymentRequestReasonPaymentCardDeclined.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentRequestReasonPaymentCardMissing": "Payment card missing",
    "_PaymentRequestReasonPaymentCardMissing.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentStatusFailedTitle": "Sorry, we couldn't process your payment",
    "_PaymentStatusFailedTitle.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentStatusPendingInfo": "This could take up to 2 minutes. If it takes longer, please visit reception to find a solution.",
    "_PaymentStatusPendingInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentStatusPendingTitle": "We're processing your payment",
    "_PaymentStatusPendingTitle.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentSuccess": "Payment successful",
    "_PaymentSuccess.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PaymentTerminalCriticalErrorDialogBody": "We received your payment, but couldn't check you in. Please go to reception to finish checking in.",
    "_PaymentTerminalCriticalErrorDialogBody.meta": {
      "Scopes": [ "Operator" ]
    },
    "PaymentTerminalCriticalErrorDialogTitle": "Check-in failed",
    "_PaymentTerminalCriticalErrorDialogTitle.meta": {
      "Scopes": [ "Operator" ]
    },
    "PaymentTerminalInstructionsDialogBody": "Find the nearby terminal and follow its instructions to pay for your stay.",
    "_PaymentTerminalInstructionsDialogBody.meta": {
      "Scopes": [ "Operator" ]
    },
    "PaymentTerminalInstructionsDialogTitle": "Pay using terminal",
    "_PaymentTerminalInstructionsDialogTitle.meta": {
      "Scopes": [ "Operator" ]
    },
    "PayNow": "Pay now",
    "_PayNow.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PayWith": "Pay with",
    "_PayWith.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Pending": "Pending",
    "_Pending.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PendingPayment": "Pending payment",
    "_PendingPayment.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PendingPaymentPlural": "Pending payments",
    "_PendingPaymentPlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PendingPaymentsDescription": "Here's a list of payments that are pending and their details.",
    "_PendingPaymentsDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PersonalDataProcessingAgreement": "and with processing of my personal data by",
    "_PersonalDataProcessingAgreement.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PersonalInformation": "Personal information",
    "_PersonalInformation.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "PersonalInformationStepDescription": "All details below will be shared with the property where you're staying, including identity document and personal information.",
    "_PersonalInformationStepDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PersonalInformationStorageDescription": "Safely store your personal data now for a faster check-in later.",
    "_PersonalInformationStorageDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PersonalInfoStepDescription": "All details below will be shared with {enterpriseName}, including identity document and personal information.",
    "_PersonalInfoStepDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PersonalPreferences": "Personal preferences",
    "_PersonalPreferences.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PersonName": "Name",
    "_PersonName.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PersonPlural": "People",
    "_PersonPlural.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "Phone": "Telephone",
    "_Phone.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PhoneNumber": "Phone",
    "_PhoneNumber.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PinCode": "PIN code",
    "_PinCode.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PlaceGuidePlural": "Guides",
    "_PlaceGuidePlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PlaceOrder": "Place order",
    "_PlaceOrder.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PleaseFillNotes": "Please complete notes.",
    "_PleaseFillNotes.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PleaseInstallWebBrowser": "Please install a web browser.",
    "_PleaseInstallWebBrowser.meta": {
      "Scopes": [ "Operator" ]
    },
    "PleaseSignAbove": "Please sign above with your finger or by mouse.",
    "_PleaseSignAbove.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PossibleCloudHostingExplanation": "It is possible that this picture is hosted on iCloud and hasn't been downloaded to the device.",
    "_PossibleCloudHostingExplanation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PostalCode": "Postal code",
    "_PostalCode.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "PoweredBy": "Powered by",
    "_PoweredBy.meta": {
      "Scopes": [ "Navigator", "Mail" ]
    },
    "PreferredTime": "Preferred time",
    "_PreferredTime.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PreparingNavigatorProgress": "Preparing Navigator",
    "_PreparingNavigatorProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PreparingSecureCheckout": "Preparing secure check-out",
    "_PreparingSecureCheckout.meta": {
      "Scopes": [ "Distributor" ]
    },
    "PreRegistration": "Pre-registration",
    "_PreRegistration.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PreRegistringCheckInSpeedUp": "Pre-register with us now to speed up your check-in process once you arrive.",
    "_PreRegistringCheckInSpeedUp.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PreviewDate": "Preview date",
    "_PreviewDate.meta": {
      "Scopes": [ "Billing" ]
    },
    "Previewer": "Previewer",
    "_Previewer.meta": {
      "Scopes": [ "Billing" ]
    },
    "PreviousStep": "Previous step",
    "_PreviousStep.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PriceLabel": "Price",
    "_PriceLabel.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "PrintCount": "Print count",
    "_PrintCount.meta": {
      "Scopes": [ "Billing" ]
    },
    "PrivacyPolicy": "Privacy policy",
    "_PrivacyPolicy.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProceedToCheckout": "Proceed to check-out",
    "_ProceedToCheckout.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ProceedToPay": "Proceed to pay",
    "_ProceedToPay.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProceedToPayment": "Proceed to secure payment",
    "_ProceedToPayment.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Processed": "Processed",
    "_Processed.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProcessingPaymentDialogBody": "Please wait for your payment to process — it should only take a few moments.",
    "_ProcessingPaymentDialogBody.meta": {
      "Scopes": [ "Operator" ]
    },
    "ProcessingPaymentDialogTitle": "Processing payment...",
    "_ProcessingPaymentDialogTitle.meta": {
      "Scopes": [ "Operator" ]
    },
    "Product": "Product",
    "_Product.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProductCategoriesOverlayTutorial": "Swipe left and right to switch between product categories.",
    "_ProductCategoriesOverlayTutorial.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProductChargingOnce": "Once",
    "_ProductChargingOnce.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ProductChargingPerNight": "Per night",
    "_ProductChargingPerNight.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ProductChargingPerPerson": "Per person",
    "_ProductChargingPerPerson.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ProductChargingPerPersonNight": "Per person per night",
    "_ProductChargingPerPersonNight.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ProductPlural": "Products",
    "_ProductPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ProductsStillLoading": "Products are loading. Just a moment, please.",
    "_ProductsStillLoading.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Profile": "Profile",
    "_Profile.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileAccessNotSignedIn": "Please sign in to access your profile",
    "_ProfileAccessNotSignedIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileCompletion": "Profile completion",
    "_ProfileCompletion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileCompletionInfo": "Profile successfully completed. Information can be updated at any time.",
    "_ProfileCompletionInfo.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileCompletionLoadFailure": "Cannot load complete profile confirmation. Just a moment, please.",
    "_ProfileCompletionLoadFailure.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileCompletionTemplate": "Your profile is {percent}% complete.",
    "_ProfileCompletionTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileImageChange": "Change profile image",
    "_ProfileImageChange.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileNeedMoreInformation": "Please provide all required information.",
    "_ProfileNeedMoreInformation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProfileText": "Please update your profile now for a quicker and smoother check-in later.",
    "_ProfileText.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressBasketItemsAdd": "Adding items to your basket",
    "_ProgressBasketItemsAdd.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCheck": "Checking",
    "_ProgressCheck.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCheckIn": "Checking in",
    "_ProgressCheckIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCityLoad": "Loading cities",
    "_ProgressCityLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCitySet": "Setting the city",
    "_ProgressCitySet.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCommentSend": "Sending comment",
    "_ProgressCommentSend.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCompanionAdd": "Adding companion",
    "_ProgressCompanionAdd.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCompanionRemove": "Removing companion",
    "_ProgressCompanionRemove.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCreditCardAdd": "Adding payment card",
    "_ProgressCreditCardAdd.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressCreditCardRemove": "Removing payment card",
    "_ProgressCreditCardRemove.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressHotelRequest": "Requesting property",
    "_ProgressHotelRequest.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressHotelSet": "Setting the property",
    "_ProgressHotelSet.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressInformationUpdate": "Updating information",
    "_ProgressInformationUpdate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressMessageSend": "Sending message",
    "_ProgressMessageSend.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressMessagesLoad": "Loading messages",
    "_ProgressMessagesLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressMessageThreadCreate": "Creating message thread",
    "_ProgressMessageThreadCreate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressNotificationMark": "Marking notification",
    "_ProgressNotificationMark.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressNotificationsLoad": "Loading notifications",
    "_ProgressNotificationsLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressOrderDetailsLoad": "Loading order details",
    "_ProgressOrderDetailsLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressOrderLoad": "Loading orders",
    "_ProgressOrderLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressOrderService": "Ordering services",
    "_ProgressOrderService.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressOrdersHistoryLoading": "Loading order history",
    "_ProgressOrdersHistoryLoading.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressPasswordChange": "Changing password",
    "_ProgressPasswordChange.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressPasswordReset": "Resetting password",
    "_ProgressPasswordReset.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressPlacesLoad": "Loading places",
    "_ProgressPlacesLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressReservationInfoLoad": "Loading reservation details",
    "_ProgressReservationInfoLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressRouteInfoLoad": "Loading route information",
    "_ProgressRouteInfoLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressServiceDetailsLoad": "Loading service details",
    "_ProgressServiceDetailsLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressServiceOrdersLoad": "Loading service orders",
    "_ProgressServiceOrdersLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressServicesLoad": "Loading services",
    "_ProgressServicesLoad.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressSetLanguage": "Setting language",
    "_ProgressSetLanguage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressSignIn": "Signing in",
    "_ProgressSignIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ProgressSignUp": "Signing up",
    "_ProgressSignUp.meta": {
      "Scopes": [ "Navigator" ]
    },
    "PromotionCode": "Promotion code",
    "_PromotionCode.meta": {
      "Scopes": [ "Distributor" ]
    },
    "PromotionCodeQuestion": "Do you have a promotion code?",
    "_PromotionCodeQuestion.meta": {
      "Scopes": [ "Distributor" ]
    },
    "PromotionRatePlural": "Promotion rates",
    "_PromotionRatePlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "PropertyCurrency": "Property currency",
    "_PropertyCurrency.meta": {
      "Scopes": [ "Distributor" ]
    },
    "PropertyPrivacyPolicy": "Property Privacy Policy",
    "_PropertyPrivacyPolicy.meta": {
      "Scopes": [ "Distributor" ]
    },
    "PropertyTermsAndConditions": "Property T&C",
    "_PropertyTermsAndConditions.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "Psd2Explanation": "Why does your payment need to be verified? Due to an EU regulation - known as <a style=\"color: #0091fb;\" href=\"https://stripe.com/en-US/guides/strong-customer-authentication\" target=\"_blank\">PSD2</a> - every online payment needs to be verified by your bank. Learn more about <a style=\"color: #0091fb;\"  href=\"https://www.mewssystems.com/blog/psd2-guide-for-hoteliers\" target=\"_blank\">how this extra authentication protects people like you from fraud</a>.",
    "_Psd2Explanation.meta": {
      "Scopes": [ "Mail" ]
    },
    "PublicRatePlural": "Public rates",
    "_PublicRatePlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "QrCodeInvalidFormat": "Invalid QR code format",
    "_QrCodeInvalidFormat.meta": {
      "Scopes": [ "Operator" ]
    },
    "QrCodeScanToFindReservation": "Scan the QR code in your confirmation email to find your reservation.",
    "_QrCodeScanToFindReservation.meta": {
      "Scopes": [ "Operator" ]
    },
    "QrCodeWhereToFind": "Your QR code is in your confirmation email. Make sure you scan the whole code.",
    "_QrCodeWhereToFind.meta": {
      "Scopes": [ "Operator" ]
    },
    "QuestionCheckInCancel": "Cancel your check-in?",
    "_QuestionCheckInCancel.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QuestionCityNotListed": "Can't find your city?",
    "_QuestionCityNotListed.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QuestionCompanionRemoveTemplate": "Remove {companion} from your list of companions?",
    "_QuestionCompanionRemoveTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QuestionCreditCardRemove": "Remove this payment card from your profile?",
    "_QuestionCreditCardRemove.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QuestionForgotPassword": "Forgot password?",
    "_QuestionForgotPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QuestionHotelNotListed": "Can't find your property?",
    "_QuestionHotelNotListed.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QuestionPreorderServices": "Preorder these services for your stay?",
    "_QuestionPreorderServices.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QuestionsOrRequest": "Questions or request?",
    "_QuestionsOrRequest.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Queue": "Queue",
    "_Queue.meta": {
      "Scopes": [ "Navigator" ]
    },
    "QueuePlural": "Queues",
    "_QueuePlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Rate": "Rate",
    "_Rate.meta": {
      "Scopes": [ "Distributor" ]
    },
    "RatePlural": "Rates",
    "_RatePlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "RatesDescriptions": "Rate descriptions",
    "_RatesDescriptions.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ReadMoreAboutPersonalDataProcessing": "Read more about personal data processing in {source}.",
    "_ReadMoreAboutPersonalDataProcessing.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReadMoreAboutPersonalDataProcessingIn": "Read more about personal data processing in",
    "_ReadMoreAboutPersonalDataProcessingIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReadOnlyPaymentCardDescription": "Your payment card details are only used to secure your reservation and in case of additional expenses.",
    "_ReadOnlyPaymentCardDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReadyForCheckIn": "Ready for check-in",
    "_ReadyForCheckIn.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReadyToCheckout": "Ready to check out",
    "_ReadyToCheckout.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReadyToCheckoutNowMessage": "Now, you're ready to check out.",
    "_ReadyToCheckoutNowMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RecalculatingPrice": "Recalculating price",
    "_RecalculatingPrice.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ReceivedMessageFromEnterpriseMessage": "You have a new message from {enterpriseName}!",
    "_ReceivedMessageFromEnterpriseMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RegistrationCardComplete": "Complete",
    "_RegistrationCardComplete.meta": {
      "Scopes": [ "Operator" ]
    },
    "Remove": "Remove",
    "_Remove.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "RemoveCompanion": "Remove companion",
    "_RemoveCompanion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RemoveCreditCard": "Remove payment card",
    "_RemoveCreditCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RemovePaymentCard": "Remove payment card",
    "_RemovePaymentCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RemovePaymentCardProgress": "Removing payment card",
    "_RemovePaymentCardProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RemovePaymentCardQuestion": "Remove this payment card from your profile?",
    "_RemovePaymentCardQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RepeatYourPassword": "Repeat password",
    "_RepeatYourPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReportBug": "Report a bug",
    "_ReportBug.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Request": "Request",
    "_Request.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestData": "Request data",
    "_RequestData.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestDataConfirmationMessage": "Your data request has been successfully submitted.",
    "_RequestDataConfirmationMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestDataMessage": "When you request your data, we'll email any properties you've shared your information with and ask them to provide you with all collected data.",
    "_RequestDataMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestDeletion": "Request deletion",
    "_RequestDeletion.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "RequestDeletionConfirmationMessage": "Your deletion request has been successfully submitted.",
    "_RequestDeletionConfirmationMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestDeletionMessage": "Are you sure you want to request deletion of the data?",
    "_RequestDeletionMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestedCategory": "Requested category",
    "_RequestedCategory.meta": {
      "Scopes": [ "Mail", "Billing" ]
    },
    "RequestSharedDataDeletionMessage": "This will send a request to {enterpriseName} to delete the data you've shared with them. The next time you visit {enterpriseName}, you'll need to fill in your data again.",
    "_RequestSharedDataDeletionMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestSharedDataDeletionQuestion": "Request deletion of shared data?",
    "_RequestSharedDataDeletionQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequestSupport": "Request support",
    "_RequestSupport.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RequiredFields": "Required fields",
    "_RequiredFields.meta": {
      "Scopes": [ "Distributor" ]
    },
    "RequiredFieldTemplate": "{name} is a required field",
    "_RequiredFieldTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationCanceled": "Reservation was either canceled or processed manually by property.",
    "_ReservationCanceled.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationCannotOnlineCheckIn": "Cannot check in online.",
    "_ReservationCannotOnlineCheckIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationCardCompanionSubmittedHeader": "Complete your registration card",
    "_ReservationCardCompanionSubmittedHeader.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationCardCompanionSubmittedSubHeader": "We've already got your details. Please add your signature to continue.",
    "_ReservationCardCompanionSubmittedSubHeader.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationConfirmation": "Reservation confirmation",
    "_ReservationConfirmation.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationDateInPastErrorMessage": "Cannot create reservations in the past. Please review order and try again.",
    "_ReservationDateInPastErrorMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ReservationDetails": "Reservation details",
    "_ReservationDetails.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationDetailsWhereToFind": "You'll find these details in your confirmation email.",
    "_ReservationDetailsWhereToFind.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationManualSearchFailedErrorMessage": "Double check your details or try searching by QR code.",
    "_ReservationManualSearchFailedErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationNotFoundErrorMessage": "We can't find your reservation.",
    "_ReservationNotFoundErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationNotFoundSuggestion": "Review your details to try again, or tap the Help button above.",
    "_ReservationNotFoundSuggestion.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationNotReadyErrorMessage": "This reservation is not ready yet",
    "_ReservationNotReadyErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationNumber": "Reservation number",
    "_ReservationNumber.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationOverview": "Reservation overview",
    "_ReservationOverview.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationPeopleLimitExceededMessage": "You've already added the maximum number of people for this reservation. To free up space, continue to the next step and delete a companion.",
    "_ReservationPeopleLimitExceededMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationQrCodeSearchFailedErrorMessage": "Try entering your details manually.",
    "_ReservationQrCodeSearchFailedErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "Reservations": "Reservations",
    "_Reservations.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationsNotAvailableToCheckIn": "Reservation cannot be checked in",
    "_ReservationsNotAvailableToCheckIn.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservationStayDescription": "This tells us which details to ask for.",
    "_ReservationStayDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationStayForMe": "Yes, I am staying",
    "_ReservationStayForMe.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationStayForOthers": "No, I booked for others",
    "_ReservationStayForOthers.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationStayHere": "I'll stay here",
    "_ReservationStayHere.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationStayQuestion": "Are you part of this reservation?",
    "_ReservationStayQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReservationTimeStateCheckedIn": "Checked in",
    "_ReservationTimeStateCheckedIn.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReservedNightPlural": "Nights",
    "_ReservedNightPlural.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReserveNow": "Reserve now",
    "_ReserveNow.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ResetPassword": "Reset password",
    "_ResetPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ResetPasswordLinkSent": "Check your email for instructions on how to reset your password.",
    "_ResetPasswordLinkSent.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RestoreCompanion": "Restore companion",
    "_RestoreCompanion.meta": {
      "Scopes": [ "Operator" ]
    },
    "RestoreCompanionInstruction": "Tap to restore companion",
    "_RestoreCompanionInstruction.meta": {
      "Scopes": [ "Operator" ]
    },
    "RetryTemplate": "Retry {count}: {description}",
    "_RetryTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReturnToHome": "Return to Home",
    "_ReturnToHome.meta": {
      "Scopes": [ "Operator" ]
    },
    "ReturnToSummary": "Return to summary",
    "_ReturnToSummary.meta": {
      "Scopes": [ "Distributor" ]
    },
    "RetypeNewPassword": "Retype new password",
    "_RetypeNewPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "RetypePassword": "Retype password",
    "_RetypePassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ReviewYourBill": "Review your bill",
    "_ReviewYourBill.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Room": "Room",
    "_Room.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "RoomPlural": "Rooms",
    "_RoomPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Save": "Save",
    "_Save.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SaveAndCheckIn": "Save and check in",
    "_SaveAndCheckIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SavePaymentCardPrompt": "Click the 'Save' button to save a payment card.",
    "_SavePaymentCardPrompt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SaveShareSelectedHotels": "Save and share with selected properties",
    "_SaveShareSelectedHotels.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SaveSuccessMessage": "Changes successfully saved.",
    "_SaveSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ScanCreditCard": "Scan payment card",
    "_ScanCreditCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ScanDocument": "Scan document",
    "_ScanDocument.meta": {
      "Scopes": [ "Operator" ]
    },
    "ScanDocumentHelp": "Scan the page with this section",
    "_ScanDocumentHelp.meta": {
      "Scopes": [ "Operator" ]
    },
    "ScanDocumentUsingCamera": "Hold your identity document up to the camera",
    "_ScanDocumentUsingCamera.meta": {
      "Scopes": [ "Operator" ]
    },
    "ScanPassport": "Scan passport",
    "_ScanPassport.meta": {
      "Scopes": [ "Operator" ]
    },
    "ScanPassportOrId": "Fill details by scanning passport or ID",
    "_ScanPassportOrId.meta": {
      "Scopes": [ "Operator" ]
    },
    "ScanPaymentCard": "Scan payment card",
    "_ScanPaymentCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ScanQrCode": "Scan QR code",
    "_ScanQrCode.meta": {
      "Scopes": [ "Operator" ]
    },
    "ScanYourCard": "Please scan card",
    "_ScanYourCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ScheduleCheckOut": "Schedule check-out",
    "_ScheduleCheckOut.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ScheduleCheckOutNow": "Schedule check-out now",
    "_ScheduleCheckOutNow.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Search": "Search",
    "_Search.meta": {
      "Scopes": [ "Operator" ]
    },
    "SearchingOtherDates": "Searching other dates",
    "_SearchingOtherDates.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SearchManually": "Search manually",
    "_SearchManually.meta": {
      "Scopes": [ "Operator" ]
    },
    "SearchNavigator": "Search Navigator",
    "_SearchNavigator.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SecondLastName": "Second last name",
    "_SecondLastName.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "SecuredWith": "Secured with",
    "_SecuredWith.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "Seen": "Seen",
    "_Seen.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SeeWhatIsMissing": "See what's missing",
    "_SeeWhatIsMissing.meta": {
      "Scopes": [ "Operator" ]
    },
    "Select": "Select",
    "_Select.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "SelectAnotherCategory": "Select another category",
    "_SelectAnotherCategory.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SelectBookingPrompt": "Select your reservation",
    "_SelectBookingPrompt.meta": {
      "Scopes": [ "Operator" ]
    },
    "SelectCategory": "Select category",
    "_SelectCategory.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SelectCity": "Select city",
    "_SelectCity.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectCompanion": "Select companion",
    "_SelectCompanion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectCountry": "Select country",
    "_SelectCountry.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectDate": "Select date",
    "_SelectDate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectDates": "Please select preferred dates of stay.",
    "_SelectDates.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SelectDatesTitle": "Select dates",
    "_SelectDatesTitle.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SelectDay": "Select day",
    "_SelectDay.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectHotel": "Select property",
    "_SelectHotel.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "SelectLanguage": "Select language",
    "_SelectLanguage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectLocation": "Select location",
    "_SelectLocation.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SelectMonth": "Select month",
    "_SelectMonth.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectPicture": "Select picture",
    "_SelectPicture.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SelectProperty": "Select property",
    "_SelectProperty.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SelectRate": "Select rate",
    "_SelectRate.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SelectYear": "Select year",
    "_SelectYear.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Send": "Send",
    "_Send.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SendingProgress": "Sending",
    "_SendingProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SendMarketingEmailsMessage": "I'd like to occasionally receive marketing updates.",
    "_SendMarketingEmailsMessage.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "SendMarketingEmailsTemplate": "I'd like to occasionally receive marketing updates from {enterpriseName}.",
    "_SendMarketingEmailsTemplate.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "SendMessage": "Chat with us",
    "_SendMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServerNotFound": "Cannot find server.",
    "_ServerNotFound.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServerResponseInvalid": "Invalid server response.",
    "_ServerResponseInvalid.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Service": "Service",
    "_Service.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServiceCharge": "Service charge",
    "_ServiceCharge.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServiceNoLongerAvailableTemplate": "Unfortunately, {name} is no longer available. Pending order for this service will be removed.",
    "_ServiceNoLongerAvailableTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServiceOrderUpdate": "Service order update",
    "_ServiceOrderUpdate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServicePlural": "Services",
    "_ServicePlural.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServicesAccessNotSignedIn": "Please sign in to access this service.",
    "_ServicesAccessNotSignedIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServicesNoHotelSelected": "Please select a property to view available services.",
    "_ServicesNoHotelSelected.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ServicesOverlayTutorial": "Swipe left and right to switch between services",
    "_ServicesOverlayTutorial.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SetPassword": "Set password",
    "_SetPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SetPasswordDescription": "Please create a new password.",
    "_SetPasswordDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SetPasswordSuccessMessage": "Password successfully set.",
    "_SetPasswordSuccessMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Settings": "Settings",
    "_Settings.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SetYourPersonalPassword": "Please set your personal password",
    "_SetYourPersonalPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Sex": "Sex",
    "_Sex.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "SexFemale": "Female",
    "_SexFemale.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "SexMale": "Male",
    "_SexMale.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Share": "Share",
    "_Share.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SharedData": "Shared data",
    "_SharedData.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SharedDataInfoText": "Please note that when data is shared with properties, all enclosed details are also shared, including identity document and personal information.",
    "_SharedDataInfoText.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShareWithFriends": "Share with friends",
    "_ShareWithFriends.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ShareWithPropertyHint": "We’re asking for only the minimum amount of data that’s legally required for your stay. It is only shared with us (Mews Systems) and {chainName} (the managing company of {enterpriseName}). It will not be shared with any third parties without your consent. As promised, you are in control of your data.",
    "_ShareWithPropertyHint.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShareYourExperienceParagraph": "<p>                Please share your thoughts here: {tripAdvisorLink}            </p>",
    "_ShareYourExperienceParagraph.meta": {
      "Scopes": [ "Mail" ]
    },
    "SharingPersonalDataWithHotelsInfoText": "Please select which properties you'd like to share your personal data with, helping them to better personalize their service to your preferences.",
    "_SharingPersonalDataWithHotelsInfoText.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SharingProfileProgress": "Sharing profile",
    "_SharingProfileProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Show": "Show",
    "_Show.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShowComments": "Show comments",
    "_ShowComments.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShowInNavigator": "Show in Navigator",
    "_ShowInNavigator.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShowInvalidEntry": "Show invalid entry",
    "_ShowInvalidEntry.meta": {
      "Scopes": [ "Operator" ]
    },
    "ShowLessProducts": "Show fewer products",
    "_ShowLessProducts.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ShowMore": "Show more",
    "_ShowMore.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShowMoreProducts": "Show more products",
    "_ShowMoreProducts.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ShowOnGoogleMaps": "Show on Google Maps",
    "_ShowOnGoogleMaps.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShowPast": "Show past",
    "_ShowPast.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ShowProperty": "Show property",
    "_ShowProperty.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ShowRates": "Show rates",
    "_ShowRates.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Signature": "Signature",
    "_Signature.meta": {
      "Scopes": [ "Operator" ]
    },
    "SignedInAs": "Signed in as",
    "_SignedInAs.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignIn": "Sign in",
    "_SignIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignInFacebook": "Sign in with Facebook",
    "_SignInFacebook.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignInFailed": "Sign-in failed.",
    "_SignInFailed.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignInLinkedIn": "Sign in with LinkedIn",
    "_SignInLinkedIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignInQuestion": "Sign in?",
    "_SignInQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignInRequiredForAccess": "Please sign in to access {module}.",
    "_SignInRequiredForAccess.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignInTwitter": "Sign in with Twitter",
    "_SignInTwitter.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignOut": "Sign out",
    "_SignOut.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignUp": "Sign up",
    "_SignUp.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SignUpWithEmailButton": "Sign up with email",
    "_SignUpWithEmailButton.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SingInToNavigator": "Sign in to Navigator",
    "_SingInToNavigator.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SingInToSeeGuideContentPrompt": "Please sign in to see the contents of this guide.",
    "_SingInToSeeGuideContentPrompt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Site": "Site",
    "_Site.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "SitePlural": "Sites",
    "_SitePlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Skip": "Skip",
    "_Skip.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SouthAmerica": "South America",
    "_SouthAmerica.meta": {
      "Scopes": [ "Operator" ]
    },
    "SpacePlural": "Spaces",
    "_SpacePlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "SpaceSelectionPrompt": "Where will you stay?",
    "_SpaceSelectionPrompt.meta": {
      "Scopes": [ "Operator" ]
    },
    "StartDate": "Start date",
    "_StartDate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "StartExploring": "Start exploring",
    "_StartExploring.meta": {
      "Scopes": [ "Navigator" ]
    },
    "State": "State",
    "_State.meta": {
      "Scopes": [ "Navigator" ]
    },
    "StateProvince": "State/Province",
    "_StateProvince.meta": {
      "Scopes": [ "Distributor" ]
    },
    "StayingAt": "Staying at:",
    "_StayingAt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "StepCountOfTotal": "Step {count} of {total}",
    "_StepCountOfTotal.meta": {
      "Scopes": [ "Distributor" ]
    },
    "StillThereQuestion": "Are you still there?",
    "_StillThereQuestion.meta": {
      "Scopes": [ "Operator" ]
    },
    "Street": "Street",
    "_Street.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Subject": "Subject",
    "_Subject.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Submit": "Submit",
    "_Submit.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SubTotal": "Subtotal",
    "_SubTotal.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Success": "Success",
    "_Success.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SuccessCreditCardAdd": "Credit card successfully registered.",
    "_SuccessCreditCardAdd.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SuccessfullySignedIn": "Successfully signed in.",
    "_SuccessfullySignedIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SuccessfullySignedUp": "Great news! You have successfully signed up with Mews. We have sent you a verification email. Please follow instructions to activate your account.",
    "_SuccessfullySignedUp.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SuccessOrder": "Order successfully placed.",
    "_SuccessOrder.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SuccessPasswordChange": "Password successfully changed.",
    "_SuccessPasswordChange.meta": {
      "Scopes": [ "Navigator" ]
    },
    "SuccessPasswordReset": "Password successfully reset.",
    "_SuccessPasswordReset.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Suite": "Suite",
    "_Suite.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "SuitePlural": "Suites",
    "_SuitePlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Summary": "Summary",
    "_Summary.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "SummaryAndPayment": "Summary & payment",
    "_SummaryAndPayment.meta": {
      "Scopes": [ "Operator" ]
    },
    "SurchargeFeeMessage": "Credit card payments to hotels in Australia and New Zealand are subject to a transaction fee. The current fee is {visaFee} % of the total transaction for Visa, {mastercardFee} % for Mastercard, and {amexFee} % for American Express. Fees may change and are confirmed at the time a charge is made.",
    "_SurchargeFeeMessage.meta": {
      "Scopes": [ "Distributor" ]
    },
    "TakePicture": "Take picture",
    "_TakePicture.meta": {
      "Scopes": [ "Navigator" ]
    },
    "TapToSign": "Tap to sign",
    "_TapToSign.meta": {
      "Scopes": [ "Operator" ]
    },
    "TaxationRate": "{taxationName} rate",
    "_TaxationRate.meta": {
      "Scopes": [ "Billing" ]
    },
    "Taxed": "Taxation date",
    "_Taxed.meta": {
      "Scopes": [ "Billing" ]
    },
    "TaxesAndFees": "Taxes and fees",
    "_TaxesAndFees.meta": {
      "Scopes": [ "Operator" ]
    },
    "TaxIdentifier": "Tax identifier",
    "_TaxIdentifier.meta": {
      "Scopes": [ "Billing" ]
    },
    "TaxIdentifierDetailed": "Tax identifier (VAT number, etc.)",
    "_TaxIdentifierDetailed.meta": {
      "Scopes": [ "Navigator" ]
    },
    "TaxIncluded": "Tax included",
    "_TaxIncluded.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Telephone": "Telephone",
    "_Telephone.meta": {
      "Scopes": [ "Distributor" ]
    },
    "TerminalPaymentSuccessDialogBody": "Your payment was successful.",
    "_TerminalPaymentSuccessDialogBody.meta": {
      "Scopes": [ "Operator" ]
    },
    "TerminalPaymentSuccessDialogTitle": "Great!",
    "_TerminalPaymentSuccessDialogTitle.meta": {
      "Scopes": [ "Operator" ]
    },
    "TermsAndConditions": "Terms and conditions",
    "_TermsAndConditions.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "TermsConditions": "Terms and conditions",
    "_TermsConditions.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThanksInAdvance": "Thanks in advance",
    "_ThanksInAdvance.meta": {
      "Scopes": [ "Mail" ]
    },
    "ThanksProfile": "Profile successfully updated. Thank you!",
    "_ThanksProfile.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThanksProfileComplete": "Profile successfully completed. Thank you!",
    "_ThanksProfileComplete.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThanksRequest": "Thank you for the request! We'll contact this property about Mews!",
    "_ThanksRequest.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThankYou": "Thank you!",
    "_ThankYou.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThankYouCheckInTemplateClassic": "Don't forget, your keys will be at reception.",
    "_ThankYouCheckInTemplateClassic.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThankYouCheckInTemplateKiosk": "Don't forget, you'll create your keys at the lobby kiosk.",
    "_ThankYouCheckInTemplateKiosk.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThankYouCheckInTemplateOnline": "We'll send you an email with more info about your keys.",
    "_ThankYouCheckInTemplateOnline.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ThankYouSentence": "Thank you.",
    "_ThankYouSentence.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Till": "Till",
    "_Till.meta": {
      "Scopes": [ "Navigator" ]
    },
    "TimeoutToHomeScreen": "We'll redirect you to the home screen in {numberOfSeconds}s.",
    "_TimeoutToHomeScreen.meta": {
      "Scopes": [ "Operator" ]
    },
    "TitlePrefix": "Title",
    "_TitlePrefix.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "To": "To",
    "_To.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ToBePaid": "To be paid",
    "_ToBePaid.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Today": "Today",
    "_Today.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Tomorrow": "Tomorrow",
    "_Tomorrow.meta": {
      "Scopes": [ "Navigator" ]
    },
    "TooManyCompanionsTemplate": "Reservation is for {number} people. Cannot add additional companions.",
    "_TooManyCompanionsTemplate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Total": "Total",
    "_Total.meta": {
      "Scopes": [ "Navigator", "Distributor", "Billing" ]
    },
    "TotalAmount": "Total amount",
    "_TotalAmount.meta": {
      "Scopes": [ "Mail" ]
    },
    "TotalCost": "Total amount",
    "_TotalCost.meta": {
      "Scopes": [ "Mail", "Billing" ]
    },
    "TotalCostGross": "Total amount (Gross)",
    "_TotalCostGross.meta": {
      "Scopes": [ "Billing" ]
    },
    "TotalDue": "Total due",
    "_TotalDue.meta": {
      "Scopes": [ "Navigator" ]
    },
    "TotalInAdvance": "To be paid in advance",
    "_TotalInAdvance.meta": {
      "Scopes": [ "Distributor" ]
    },
    "TravelVisa": "Travel visa",
    "_TravelVisa.meta": {
      "Scopes": [ "Operator" ]
    },
    "TryAgain": "Try again",
    "_TryAgain.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "TryAgainWithTheSameCardInstruction": "Try again with the same card (to re-attempt verification).",
    "_TryAgainWithTheSameCardInstruction.meta": {
      "Scopes": [ "Mail" ]
    },
    "TryOtherDates": "Please select different dates.",
    "_TryOtherDates.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Type": "Type",
    "_Type.meta": {
      "Scopes": [ "Navigator", "Operator" ]
    },
    "Unavailable": "Unavailable",
    "_Unavailable.meta": {
      "Scopes": [ "Distributor" ]
    },
    "UnknownCustomerHint": "Cannot find profile for companions. Please provide some basic information about them:",
    "_UnknownCustomerHint.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UnknownPerson": "Unknown person",
    "_UnknownPerson.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UnreadMessages": "Unread messages",
    "_UnreadMessages.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UnsupportedFileTypeErrorMessage": "File type not supported.",
    "_UnsupportedFileTypeErrorMessage.meta": {
      "Scopes": [ "Commander", "Navigator" ]
    },
    "UpcomingStay": "Upcoming stay",
    "_UpcomingStay.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Update": "Update",
    "_Update.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UpdateArrivalTimeProgress": "Updating arrival time",
    "_UpdateArrivalTimeProgress.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UpdateCreditCard": "Update payment card",
    "_UpdateCreditCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UpdatePaymentCard": "Update payment card",
    "_UpdatePaymentCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UpdatePaymentMethod": "Update payment method",
    "_UpdatePaymentMethod.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UpdateProfile": "Update profile",
    "_UpdateProfile.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UpdateProfileThankYou": "Thank you for updating your profile! Share your updated information with properties?",
    "_UpdateProfileThankYou.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UseDifferentPaymentCard": "Use a different payment card.",
    "_UseDifferentPaymentCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UseDifferentPaymentMethodInstruction": "Ask the customer to use a different payment method.",
    "_UseDifferentPaymentMethodInstruction.meta": {
      "Scopes": [ "Mail" ]
    },
    "UseOldCard": "Use my old payment card",
    "_UseOldCard.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UserNotSignedInErrorMessage": "Please sign in.",
    "_UserNotSignedInErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "UseYourFingerToSign": "Use your finger to sign",
    "_UseYourFingerToSign.meta": {
      "Scopes": [ "Operator" ]
    },
    "ValidateAgreement": "Please agree with terms and conditions to continue.",
    "_ValidateAgreement.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ValidateBookerEmail": "Booker email cannot be the same as the guest email.",
    "_ValidateBookerEmail.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ValidateCreditCard": "Please enter valid credit card number.",
    "_ValidateCreditCard.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "ValidateCreditCardExpiration": "Please enter valid expiration date.",
    "_ValidateCreditCardExpiration.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "ValidateCreditCardType": "{type} payment cards not accepted.",
    "_ValidateCreditCardType.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "ValidateCVV": "Please enter valid CVV code.",
    "_ValidateCVV.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "ValidateDate": "Please enter a valid date.",
    "_ValidateDate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidateDateWithFormat": "Please enter date in {dateFormat} format.",
    "_ValidateDateWithFormat.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidateDateWithFormatAndExample": "Use date format {dateFormat} (for example, {dateExample}).",
    "_ValidateDateWithFormatAndExample.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidateDigits": "Please enter only digits.",
    "_ValidateDigits.meta": {
      "Scopes": [ "Distributor" ]
    },
    "ValidateDuplicateEmailInReservationMessage": "You've already used this email address for another companion profile.",
    "_ValidateDuplicateEmailInReservationMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidateEmail": "Please enter valid email address.",
    "_ValidateEmail.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "ValidateFutureDateErrorMessage": "Please select date in the future.",
    "_ValidateFutureDateErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidateOwnerInReservationMessage": "Sorry, you can't add your own email address if you booked this stay for others.",
    "_ValidateOwnerInReservationMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidatePastDateErrorMessage": "Please select date in the past.",
    "_ValidatePastDateErrorMessage.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidatePhoneNumber": "Please enter valid phone number.",
    "_ValidatePhoneNumber.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidateRequired": "This field is required.",
    "_ValidateRequired.meta": {
      "Scopes": [ "Navigator", "Distributor", "Operator" ]
    },
    "ValidateReservationDocumentExpiryDate": "Expiration date has to be after check-out date.",
    "_ValidateReservationDocumentExpiryDate.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ValidationErrorMessage": "Please review and complete highlighted information.",
    "_ValidationErrorMessage.meta": {
      "Scopes": [ "Navigator", "Distributor" ]
    },
    "Value": "Value",
    "_Value.meta": {
      "Scopes": [ "Billing" ]
    },
    "ValueEmptyErrorMessage": "Please complete the required field.",
    "_ValueEmptyErrorMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "VariableSymbol": "Unique identifier",
    "_VariableSymbol.meta": {
      "Scopes": [ "Billing" ]
    },
    "Verify": "Verify",
    "_Verify.meta": {
      "Scopes": [ "Navigator" ]
    },
    "VerifyingCreditCard": "Verifying payment card",
    "_VerifyingCreditCard.meta": {
      "Scopes": [ "Distributor" ]
    },
    "VerifyPayment": "Verify payment",
    "_VerifyPayment.meta": {
      "Scopes": [ "Mail" ]
    },
    "VerifyPaymentAt": "Verify your payment at",
    "_VerifyPaymentAt.meta": {
      "Scopes": [ "Mail" ]
    },
    "VerifyPaymentCardProgress": "Verifying payment card",
    "_VerifyPaymentCardProgress.meta": {
      "Scopes": [ "Distributor" ]
    },
    "VerifyPaymentCardPrompt": "Please verify the following payment card details.",
    "_VerifyPaymentCardPrompt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "ViewPrices": "View prices",
    "_ViewPrices.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Villa": "Villa",
    "_Villa.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "VillaPlural": "Villas",
    "_VillaPlural.meta": {
      "Scopes": [ "Distributor" ]
    },
    "Villas": "Villas",
    "_Villas.meta": {
      "Scopes": [ "Distributor" ]
    },
    "VirtualCreditCardNotice": "Payment card details may have been provided by your travel agency.",
    "_VirtualCreditCardNotice.meta": {
      "Scopes": [ "Navigator" ]
    },
    "VirtualPaymentCardNotice": "Payment card details may have been provided by your travel agency.",
    "_VirtualPaymentCardNotice.meta": {
      "Scopes": [ "Navigator" ]
    },
    "VisitReceptionToFinishCheckOut": "Please visit reception to finish checking out.",
    "_VisitReceptionToFinishCheckOut.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Voucher": "Voucher",
    "_Voucher.meta": {
      "Scopes": [ "Distributor" ]
    },
    "WarningAloneCheckIn": "You are checking in yourself only. Is that correct?",
    "_WarningAloneCheckIn.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WarningDiscardCompanionChanges": "Discard changes made to your companion?",
    "_WarningDiscardCompanionChanges.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WarningDiscardCreditCardChanges": "Discard changes made to your payment card details?",
    "_WarningDiscardCreditCardChanges.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WarningDiscardHotelRequest": "Discard changes made to your property request?",
    "_WarningDiscardHotelRequest.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WarningDiscardMessageChanges": "Discard changes made to message?",
    "_WarningDiscardMessageChanges.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WarningDiscardPaymentCardChanges": "Discard changes made to your payment card details?",
    "_WarningDiscardPaymentCardChanges.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WarningDiscardProfileChanges": "Discard changes made to profile?",
    "_WarningDiscardProfileChanges.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WarningHotelChangeEmptyBasket": "Change property and discard all basket contents?",
    "_WarningHotelChangeEmptyBasket.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WelcomeToEnterprise": "Welcome to {enterpriseName}",
    "_WelcomeToEnterprise.meta": {
      "Scopes": [ "Operator" ]
    },
    "WelcomeToNavigator": "Welcome to Navigator",
    "_WelcomeToNavigator.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WelcomeToNavigatorDescription": "Check in online, provide your own details, and control where your data goes, all while saving time.",
    "_WelcomeToNavigatorDescription.meta": {
      "Scopes": [ "Navigator" ]
    },
    "WeWillSendConfirmationToThisEmail": "We'll send a confirmation email to this address.",
    "_WeWillSendConfirmationToThisEmail.meta": {
      "Scopes": [ "Distributor" ]
    },
    "WhenDoYouWantToLeaveQuestion": "When do you want to leave {todayTomorrow}?",
    "_WhenDoYouWantToLeaveQuestion.meta": {
      "Scopes": [ "Navigator" ]
    },
    "Year": "Year",
    "_Year.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YesLeaveMessage": "Yes, quit",
    "_YesLeaveMessage.meta": {
      "Scopes": [ "Operator" ]
    },
    "YesMakeRequest": "Yes, make request",
    "_YesMakeRequest.meta": {
      "Scopes": [ "Navigator" ]
    },
    "You": "You",
    "_You.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YouAreAllSet": "You're all set.",
    "_YouAreAllSet.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourDetails": "Your details",
    "_YourDetails.meta": {
      "Scopes": [ "Distributor" ]
    },
    "YourEmail": "Your email address",
    "_YourEmail.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourFirstName": "Your first name",
    "_YourFirstName.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourLastName": "Your last name",
    "_YourLastName.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourName": "Your name",
    "_YourName.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourNewPassword": "Your new password",
    "_YourNewPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourOldPassword": "Your old password",
    "_YourOldPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourPassword": "Your password",
    "_YourPassword.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YourStayAt": "Your stay at",
    "_YourStayAt.meta": {
      "Scopes": [ "Navigator" ]
    },
    "YouWillPayAmount": "You'll pay {amount} when you finish your reservation.",
    "_YouWillPayAmount.meta": {
      "Scopes": [ "Distributor" ]
    },
    "YouWillPayIn": "You'll pay in {currency}",
    "_YouWillPayIn.meta": {
      "Scopes": [ "Distributor", "Operator" ]
    },
    "YouWillPayLater": "You'll pay later based on your booking conditions.",
    "_YouWillPayLater.meta": {
      "Scopes": [ "Distributor" ]
    },
    "YouWillPayNow": "You'll pay when you finish your reservation.",
    "_YouWillPayNow.meta": {
      "Scopes": [ "Distributor" ]
    }
}
